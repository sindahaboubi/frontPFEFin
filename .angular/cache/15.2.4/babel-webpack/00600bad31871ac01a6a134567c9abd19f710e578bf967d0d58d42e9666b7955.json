{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar URL = \"http://localhost:9999/sprint-backlog-service/sprint-backlogs\";\nvar SprintBacklogService = /** @class */function () {\n  function SprintBacklogService(http) {\n    this.http = http;\n  }\n  //ajouter sprint backlog\n  SprintBacklogService.prototype.genererSprintBacklog = function (sprintBacklog) {\n    return this.http.post(\"\".concat(URL), sprintBacklog, {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var createdSprintBacklog = response.body;\n      console.log(response.status);\n      if (response.status === 404) {\n        return null;\n      }\n      return createdSprintBacklog;\n    }));\n  };\n  SprintBacklogService.prototype.modifierSprintBackog = function (sprintBacklog) {\n    return this.http.put(\"\".concat(URL), sprintBacklog, {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var modifiedSprintBacklog = response.body;\n      if (response.status === 404) {\n        return null;\n      }\n      return modifiedSprintBacklog;\n    }));\n  };\n  SprintBacklogService.prototype.afficherSprintBacklogBySprintId = function (idSprint) {\n    return this.http.get(\"\".concat(URL, \"/sprint/\") + idSprint, {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var sprintBacklog = response.body;\n      if (response.status === 404) return null;\n      return sprintBacklog;\n    }));\n  };\n  SprintBacklogService.ɵfac = function SprintBacklogService_Factory(t) {\n    return new (t || SprintBacklogService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  SprintBacklogService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SprintBacklogService,\n    factory: SprintBacklogService.ɵfac,\n    providedIn: 'root'\n  });\n  return SprintBacklogService;\n}();\nexport { SprintBacklogService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}