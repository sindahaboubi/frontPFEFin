{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar URL1 = \"http://localhost:9999/authentification-service/auth\";\nvar AuthentificationService = /** @class */function () {\n  function AuthentificationService(http) {\n    this.http = http;\n  }\n  AuthentificationService.prototype.isLoggedIn = function () {\n    var token = localStorage.getItem('token');\n    return !!token;\n  };\n  AuthentificationService.prototype.isHasRole = function () {\n    var role = localStorage.getItem('role');\n    return !!role;\n  };\n  AuthentificationService.prototype.login = function (credentials) {\n    return this.http.post(\"\".concat(URL1, \"/login\"), credentials);\n  };\n  // authenticateMembre(credentials: any): Observable<any> {\n  //   return this.http.post(`${URL1}/membre`, credentials);\n  // }\n  // authenticateChefProjet(credentials: any): Observable<any> {\n  //   return this.http.post(`${URL1}/chefProjet`, credentials);\n  // }\n  AuthentificationService.prototype.extractRolesFromToken = function (decodedToken) {\n    var roles = decodedToken.roles || [];\n    return roles;\n  };\n  AuthentificationService.prototype.decodeToken = function (token) {\n    var decodedToken = jwt_decode(token);\n    return decodedToken;\n  };\n  AuthentificationService.prototype.getToken = function () {\n    var token = localStorage.getItem('token');\n    var decodedToken = this.decodeToken(token);\n    var id = decodedToken.id,\n      email = decodedToken.email,\n      nom = decodedToken.nom,\n      prenom = decodedToken.prenom,\n      adresse = decodedToken.adresse,\n      username = decodedToken.username,\n      telephone = decodedToken.telephone,\n      status = decodedToken.status,\n      dateInscription = decodedToken.dateInscription;\n    var roles = this.extractRolesFromToken(decodedToken);\n    return {\n      roles: roles\n    };\n  };\n  AuthentificationService.ɵfac = function AuthentificationService_Factory(t) {\n    return new (t || AuthentificationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AuthentificationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthentificationService,\n    factory: AuthentificationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthentificationService;\n}();\nexport { AuthentificationService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}