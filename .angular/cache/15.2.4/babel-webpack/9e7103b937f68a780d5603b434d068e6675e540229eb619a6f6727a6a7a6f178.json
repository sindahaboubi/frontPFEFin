{"ast":null,"code":"import { __read, __spreadArray, __values } from \"tslib\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { TacheTicket } from \"src/app/model/tache-ticket\";\nimport { HistoireTicketService } from \"src/app/service/histoire-ticket.service\";\nimport { MembreService } from \"src/app/service/membre.service\";\nimport { RoleService } from \"src/app/service/role.service\";\nimport { SprintBacklogService } from \"src/app/service/sprint-backlog.service\";\nimport { SprintService } from \"src/app/service/sprint.service\";\nimport { TicketTacheService } from \"src/app/service/ticket-tache.service\";\nimport { AjoutTacheSpbComponent } from \"../dialogs/ajout-tache-spb/ajout-tache-spb.component\";\nimport { GestionTacheDialogComponent } from \"../dialogs/gestion-tache-dialog/gestion-tache-dialog.component\";\nimport Swal from \"sweetalert2\";\nimport { WebSocketTicketTacheService } from \"src/app/service/web-socket-ticket-tache.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/sprint.service\";\nimport * as i2 from \"src/app/service/histoire-ticket.service\";\nimport * as i3 from \"src/app/service/ticket-tache.service\";\nimport * as i4 from \"src/app/service/sprint-backlog.service\";\nimport * as i5 from \"src/app/service/membre.service\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"src/app/service/role.service\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"src/app/service/web-socket-ticket-tache.service\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@angular/material/menu\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"@angular/material/button\";\nimport * as i14 from \"@angular/material/card\";\nimport * as i15 from \"@angular/material/tooltip\";\nimport * as i16 from \"../histoire-membre-chart/histoire-membre-chart.component\";\nfunction MapComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h1\", 3);\n    i0.ɵɵtext(2, \"Aucun sprintBacklog pour le Moment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction MapComponent_ng_container_2_div_21_div_38_mat_icon_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 43);\n    i0.ɵɵtext(1, \"done_all\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MapComponent_ng_container_2_div_21_div_38_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function MapComponent_ng_container_2_div_21_div_38_button_22_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      var ticketTache_r9 = i0.ɵɵnextContext().$implicit;\n      var task_r6 = i0.ɵɵnextContext().$implicit;\n      var ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.prendreTicket(ticketTache_r9.id, task_r6.key));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"person_add\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r12 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", ctx_r12.menu);\n  }\n}\nfunction MapComponent_ng_container_2_div_21_div_38_button_23_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function MapComponent_ng_container_2_div_21_div_38_button_23_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      var ticketTache_r9 = i0.ɵɵnextContext().$implicit;\n      var ctx_r19 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r19.verifierPersPris(ticketTache_r9.membre));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"how_to_reg\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r13 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", ctx_r13.menu);\n  }\n}\nfunction MapComponent_ng_container_2_div_21_div_38_button_24_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function MapComponent_ng_container_2_div_21_div_38_button_24_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      var ticketTache_r9 = i0.ɵɵnextContext().$implicit;\n      var ctx_r22 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r22.detacherMembreDeTache(ticketTache_r9));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"clear\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r14 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", ctx_r14.menu);\n  }\n}\nfunction MapComponent_ng_container_2_div_21_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"mat-card\", 36)(2, \"mat-card-header\")(3, \"mat-card-title\", 20);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementStart(5, \"span\", 37);\n    i0.ɵɵtemplate(6, MapComponent_ng_container_2_div_21_div_38_mat_icon_6_Template, 2, 0, \"mat-icon\", 38);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"mat-card-subtitle\", 20);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"mat-card-content\");\n    i0.ɵɵelement(10, \"br\")(11, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"hr\");\n    i0.ɵɵelementStart(13, \"mat-card-footer\")(14, \"div\", 39)(15, \"div\")(16, \"mat-icon\");\n    i0.ɵɵtext(17, \"av_timer\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\");\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 40);\n    i0.ɵɵtemplate(22, MapComponent_ng_container_2_div_21_div_38_button_22_Template, 3, 1, \"button\", 41);\n    i0.ɵɵtemplate(23, MapComponent_ng_container_2_div_21_div_38_button_23_Template, 3, 1, \"button\", 41);\n    i0.ɵɵtemplate(24, MapComponent_ng_container_2_div_21_div_38_button_24_Template, 3, 1, \"button\", 42);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    var ticketTache_r9 = ctx.$implicit;\n    var i_r10 = ctx.index;\n    var ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r7.getBackgroundColor(i_r10 + 1));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" #\", i_r10 + 1, \"\\u00A0 - \", ticketTache_r9.titre, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ticketTache_r9.etat == \"termin\\u00E9\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ticketTache_r9.description);\n    i0.ɵɵadvance(11);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(20, 9, ticketTache_r9.dateLancement));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ticketTache_r9.membreId == null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ticketTache_r9.membreId != null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ticketTache_r9.membreId != null);\n  }\n}\nfunction MapComponent_ng_container_2_div_21_div_54_s_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"s\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r29 = i0.ɵɵnextContext();\n    var i_r26 = ctx_r29.index;\n    var tt_r25 = ctx_r29.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"#T\", i_r26 + 1, \"\\u00A0\\u00A0\\u00A0\", tt_r25.nbHeurs, \"H de travail\");\n  }\n}\nfunction MapComponent_ng_container_2_div_21_div_54_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r30 = i0.ɵɵnextContext();\n    var i_r26 = ctx_r30.index;\n    var tt_r25 = ctx_r30.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"#T\", i_r26 + 1, \"\\u00A0\\u00A0\\u00A0\", tt_r25.nbHeurs, \"H de travail\");\n  }\n}\nfunction MapComponent_ng_container_2_div_21_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 46);\n    i0.ɵɵlistener(\"click\", function MapComponent_ng_container_2_div_21_div_54_Template_div_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r32);\n      var tt_r25 = restoredCtx.$implicit;\n      var ctx_r31 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(tt_r25.etat != \"termin\\u00E9\" ? ctx_r31.openGestionTache(tt_r25) : null);\n    });\n    i0.ɵɵelementStart(1, \"span\", 47)(2, \"p\", 48);\n    i0.ɵɵtemplate(3, MapComponent_ng_container_2_div_21_div_54_s_3_Template, 2, 2, \"s\", 1);\n    i0.ɵɵtemplate(4, MapComponent_ng_container_2_div_21_div_54_span_4_Template, 2, 2, \"span\", 1);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    var tt_r25 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", tt_r25.etat == \"termin\\u00E9\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tt_r25.etat != \"termin\\u00E9\");\n  }\n}\nvar _c0 = function (a0, a1, a2) {\n  return {\n    \"bg-success\": a0,\n    \"bg-warning\": a1,\n    \"bg-danger\": a2\n  };\n};\nvar _c1 = function (a0, a1, a2) {\n  return {\n    \"bg-success\": a0,\n    \"bg-warning\": a1,\n    \"bg-primary\": a2\n  };\n};\nfunction MapComponent_ng_container_2_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementStart(3, \"mat-card\", 19)(4, \"mat-card-header\")(5, \"mat-card-title\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-card-subtitle\", 20);\n    i0.ɵɵtext(8, \"Priorite \");\n    i0.ɵɵelementStart(9, \"span\", 21);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"mat-card-content\")(12, \"span\", 20);\n    i0.ɵɵtext(13, \"ticket histoire a une velocite de \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"span\", 22)(15, \"bold\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(17, \"br\");\n    i0.ɵɵelementStart(18, \"span\", 20);\n    i0.ɵɵtext(19, \"ticket\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\u00A0\");\n    i0.ɵɵelementStart(21, \"span\", 21);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 23)(24, \"span\");\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(26, \"hr\");\n    i0.ɵɵelementStart(27, \"mat-card-footer\")(28, \"div\", 24)(29, \"div\");\n    i0.ɵɵtext(30, \"date fin sprint :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31);\n    i0.ɵɵpipe(32, \"date\");\n    i0.ɵɵelementStart(33, \"mat-icon\", 25);\n    i0.ɵɵtext(34, \"error\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(35, \"div\", 14)(36, \"div\", 26)(37, \"div\", 11);\n    i0.ɵɵtemplate(38, MapComponent_ng_container_2_div_21_div_38_Template, 25, 11, \"div\", 27);\n    i0.ɵɵelementStart(39, \"mat-card\", 28);\n    i0.ɵɵlistener(\"click\", function MapComponent_ng_container_2_div_21_Template_mat_card_click_39_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r34);\n      var task_r6 = restoredCtx.$implicit;\n      var sprintBacklog_r2 = i0.ɵɵnextContext().$implicit;\n      var ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.openAjoutDialog(task_r6.key, sprintBacklog_r2));\n    });\n    i0.ɵɵelementStart(40, \"mat-card-header\")(41, \"mat-card-title\", 20);\n    i0.ɵɵelement(42, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(43, \"mat-card-subtitle\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"mat-card-content\")(45, \"mat-icon\", 29);\n    i0.ɵɵtext(46, \"note_add\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(47, \"mat-card-footer\")(48, \"div\", 30);\n    i0.ɵɵelement(49, \"div\", 31)(50, \"div\", 32);\n    i0.ɵɵelementEnd()()()()()();\n    i0.ɵɵelementStart(51, \"div\", 15);\n    i0.ɵɵelement(52, \"br\");\n    i0.ɵɵelementStart(53, \"div\", 33);\n    i0.ɵɵtemplate(54, MapComponent_ng_container_2_div_21_div_54_Template, 5, 2, \"div\", 34);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    var task_r6 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(task_r6.key.titre);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(12, _c0, task_r6.key.priorite === \"faible\", task_r6.key.priorite === \"Moyenne\", task_r6.key.priorite === \"haute\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r6.key.priorite);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(task_r6.key.effort);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(16, _c1, task_r6.key.status === \"TERMINE\", task_r6.key.status === \"EN_ATTENTE\", task_r6.key.status !== \"TERMINE\" && task_r6.key.status !== \"EN_ATTENTE\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r6.key.status);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r6.key.description);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(32, 10, task_r6.key.sprint.dateFin), \" \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", task_r6.value);\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngForOf\", task_r6.value);\n  }\n}\nfunction MapComponent_ng_container_2_app_histoire_membre_chart_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-histoire-membre-chart\", 49);\n  }\n  if (rf & 2) {\n    var sprintBacklog_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"sprintId\", sprintBacklog_r2.sprintId);\n  }\n}\nvar _c2 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\nfunction MapComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 5)(2, \"div\", 6)(3, \"h2\", 7);\n    i0.ɵɵlistener(\"click\", function MapComponent_ng_container_2_Template_h2_click_3_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r38);\n      var i_r3 = restoredCtx.index;\n      var ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.toggleAccordion(i_r3));\n    });\n    i0.ɵɵelementStart(4, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function MapComponent_ng_container_2_Template_button_click_4_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r38);\n      var sprintBacklog_r2 = restoredCtx.$implicit;\n      var ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.afficherDetailSprintBacklog(sprintBacklog_r2));\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 9)(7, \"div\", 10)(8, \"div\", 11)(9, \"div\", 12);\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementStart(11, \"p\", 13);\n    i0.ɵɵtext(12, \"Utilisateur histoire\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 14);\n    i0.ɵɵelement(14, \"br\");\n    i0.ɵɵelementStart(15, \"p\", 13);\n    i0.ɵɵtext(16, \"Liste des t\\u00E2ches\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 15);\n    i0.ɵɵelement(18, \"br\");\n    i0.ɵɵelementStart(19, \"p\", 13);\n    i0.ɵɵtext(20, \"Heurs de travail\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(21, MapComponent_ng_container_2_div_21_Template, 55, 20, \"div\", 16);\n    i0.ɵɵpipe(22, \"keyvalue\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(23, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function MapComponent_ng_container_2_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r38);\n      var ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.showCourbe = !ctx_r40.showCourbe);\n    });\n    i0.ɵɵtext(24, \"Graph\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(25, MapComponent_ng_container_2_app_histoire_membre_chart_25_Template, 1, 1, \"app-histoire-membre-chart\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    var sprintBacklog_r2 = ctx.$implicit;\n    var i_r3 = ctx.index;\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"id\", \"accordionExample\" + i_r3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"heading\", i_r3, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.activeIndex !== i_r3 && ctx_r1.activeIndex != -1);\n    i0.ɵɵattribute(\"data-bs-target\", \"#collapse\" + i_r3)(\"aria-controls\", \"collapse\" + i_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" SprintBacklog #\", ctx_r1.reverseIndex(i_r3, ctx_r1.sprintBacklogs.length), \" \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0 \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0 \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0 Objectif : \", sprintBacklog_r2.sprint.objectif, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"aria-labelledby\", \"heading\", i_r3, \"\");\n    i0.ɵɵproperty(\"data-bs-parent\", \"#accordionExample\" + i_r3);\n    i0.ɵɵattribute(\"id\", \"collapse\" + i_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c2, ctx_r1.activeIndex === i_r3))(\"hidden\", ctx_r1.activeIndex !== i_r3);\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(22, 14, ctx_r1.taskMap));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showCourbe);\n  }\n}\nvar MapComponent = /** @class */function () {\n  function MapComponent(sprintService, ticketHistoireService, ticketTacheService, sprintBacklogService, membreService, dialogAjout, roleService, toastr, dialogGestion, webSocketService) {\n    var _this = this;\n    this.sprintService = sprintService;\n    this.ticketHistoireService = ticketHistoireService;\n    this.ticketTacheService = ticketTacheService;\n    this.sprintBacklogService = sprintBacklogService;\n    this.membreService = membreService;\n    this.dialogAjout = dialogAjout;\n    this.roleService = roleService;\n    this.toastr = toastr;\n    this.dialogGestion = dialogGestion;\n    this.webSocketService = webSocketService;\n    this.sprintBacklogs = [];\n    this.ticketsTache = [];\n    this.taskMap = new Map();\n    this.listMembre = [];\n    this.showCourbe = false;\n    this.endDate = new Date('2023-03-31T23:59:59');\n    this.activeIndex = -1;\n    this.webSocketService.messageHandlingAdd(new TacheTicket()).subscribe(function (message) {\n      var e_1, _a;\n      console.log(message);\n      if (_this.webSocketService.ticketTache) _this.taskMap.get(message.subscribe.ht).push(_this.webSocketService.ticketTache);\n      if (message.subscribe) {\n        var ticketHistoire = message.subscribe.ht;\n        var _loop_1 = function (key) {\n          if (key.id === ticketHistoire.id) {\n            var listeTache = _this.taskMap.get(key);\n            var productBacklog = JSON.parse(localStorage.getItem('productBacklogCourant'));\n            console.log(message.subscribe); // afficher le message reçu dans la console\n            var ticketTache_1 = message.subscribe;\n            if (!listeTache.find(function (tache) {\n              return tache.id == ticketTache_1.id;\n            }) && ticketTache_1.ht.productBacklogId == productBacklog.id) {\n              listeTache.push(ticketTache_1);\n            }\n          }\n        };\n        try {\n          for (var _b = __values(_this.taskMap.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            _loop_1(key);\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n      }\n    });\n    this.webSocketService.messageHandlingSupprimer(new TacheTicket()).subscribe(function (message) {\n      var e_2, _a;\n      if (message.supprimer) {\n        var ticketTache_2 = message.supprimer;\n        var ticketHistoire = message.supprimer.ht;\n        try {\n          for (var _b = __values(_this.taskMap.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            if (key.id === ticketHistoire.id) {\n              var listeTache = _this.taskMap.get(key);\n              if (listeTache.find(function (tache) {\n                return tache.id == ticketTache_2.id;\n              })) {\n                listeTache.splice(listeTache.indexOf(listeTache.find(function (tache) {\n                  return tache.id == ticketTache_2.id;\n                })), 1);\n              }\n            }\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    });\n    this.webSocketService.messageHandlingModifier(new TacheTicket()).subscribe(function (message) {\n      var e_3, _a;\n      if (message.modifier) {\n        var _loop_2 = function (key) {\n          if (key.id === message.modifier.ht.id) {\n            var listeTache = _this.taskMap.get(key);\n            var ticketTache_3 = message.modifier;\n            if (listeTache.find(function (tache) {\n              return tache.id == ticketTache_3.id;\n            })) {\n              console.log(ticketTache_3.titre);\n              listeTache[listeTache.indexOf(listeTache.find(function (tache) {\n                return tache.id == ticketTache_3.id;\n              }))] = ticketTache_3;\n            }\n          }\n        };\n        try {\n          for (var _b = __values(_this.taskMap.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            _loop_2(key);\n          }\n        } catch (e_3_1) {\n          e_3 = {\n            error: e_3_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_3) throw e_3.error;\n          }\n        }\n      }\n    });\n  }\n  MapComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    var projet = JSON.parse(localStorage.getItem('projet'));\n    this.roleService.afficherListRoleParProjet(projet.id).subscribe(function (data) {\n      var e_4, _a;\n      console.log(data);\n      _this.roles = data;\n      try {\n        for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n          var role = data_1_1.value;\n          _this.listMembre.push(role.membre);\n        }\n      } catch (e_4_1) {\n        e_4 = {\n          error: e_4_1\n        };\n      } finally {\n        try {\n          if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n      }\n    });\n    var productBacklog = JSON.parse(localStorage.getItem('productBacklogCourant'));\n    this.sprintService.getListSprintsByProductBacklog(productBacklog.id).subscribe(function (listSprintData) {\n      listSprintData = listSprintData.filter(function (sprint) {\n        return sprint.etat != \"en attente\";\n      });\n      _this.sprintsList = listSprintData;\n      for (var i = 0; i < listSprintData.length; i++) _this.sprintBacklogService.afficherSprintBacklogBySprintId(listSprintData[i].id).subscribe(function (sprintBacklogData) {\n        _this.sprintBacklogs.push(sprintBacklogData);\n      });\n    });\n  };\n  MapComponent.prototype.afficherDetailSprintBacklog = function (sprintBacklog) {\n    var _this = this;\n    console.log(sprintBacklog.sprint.id);\n    var taskMap = new Map();\n    this.ticketHistoireService.getHistoireTicketBySprintId(sprintBacklog.sprint.id).subscribe(function (data) {\n      var e_5, _a;\n      _this.ticketsHistoireList = data;\n      var _loop_3 = function (ht) {\n        _this.ticketTacheService.getListTicketTacheParHt(ht.id).subscribe(function (listTacheData) {\n          _this.ticketsTache = listTacheData;\n          taskMap.set(ht, _this.ticketsTache);\n          console.log(_this.ticketsTache);\n        });\n      };\n      try {\n        for (var _b = __values(_this.ticketsHistoireList), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var ht = _c.value;\n          _loop_3(ht);\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n      _this.taskMap = taskMap;\n    });\n  };\n  //choix couleur tache\n  MapComponent.prototype.getBackgroundColor = function (index) {\n    if (index % 2 === 0) {\n      return {\n        'background-color': '#C8F8F3'\n      };\n    } else if (index % 3 == 0 && index % 2 == 0) {\n      return {\n        'background-color': '#F0FCCA'\n      };\n    } else if (index % 3 == 0) {\n      return {\n        'background-color': '#EFF8C2'\n      };\n    } else if (index % 7 == 0) {\n      return {\n        'background-color': '#F8E7C2'\n      };\n    } else if (index == 1) {\n      return {\n        'background-color': '#DDDAD3'\n      };\n    } else {\n      return {};\n    }\n  };\n  MapComponent.prototype.prendreTicket = function (idTicketTache, ht) {\n    var _this = this;\n    var ticket = this.taskMap.get(ht).find(function (tache) {\n      return tache.id == idTicketTache;\n    });\n    Swal.fire({\n      title: \"vous êtes sûr de prendre la tâche : \" + (ticket === null || ticket === void 0 ? void 0 : ticket.titre),\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Oui, Lancer!',\n      cancelButtonText: 'Annuler',\n      background: 'rgba(0,0,0,0.9)',\n      backdrop: 'rgba(0,0,0,0.4)',\n      allowOutsideClick: false,\n      allowEscapeKey: false,\n      allowEnterKey: false,\n      focusConfirm: false\n    }).then(function (result) {\n      if (result.isConfirmed) {\n        var membre = _this.membreService.getMembreFromToken();\n        _this.ticketTacheService.affecterTicketAMembre(membre, idTicketTache).subscribe(function (dataTicket) {\n          _this.ticketsTache.forEach(function (ticket) {\n            if (ticket.id == idTicketTache) {\n              ticket.dateFin = dataTicket.ht.dateFin;\n              ticket.dateLancement = dataTicket.dateLancement;\n              ticket.membre = dataTicket.membre;\n              ticket.membreId = dataTicket.membreId;\n              Swal.fire('tâche pris', 'Vous êtes le responsable de cette tâche vieulliez à ce quelle soit terminé dans ' + ticket.nbHeurs + \"H\", 'success');\n              _this.webSocketService.messageHandlingModifier(ticket).subscribe(function (message) {\n                console.log(message.modifier); // afficher le message reçu dans la console\n              }, function (err) {\n                console.error(err); // afficher les erreurs dans la console\n              }, function () {\n                console.log('WebSocket connection closed'); // afficher un message lorsque la connexion est fermée\n              });\n            }\n          });\n        });\n      }\n    });\n  };\n\n  MapComponent.prototype.reverseIndex = function (index, length) {\n    return length - index;\n  };\n  MapComponent.prototype.toggleAccordion = function (index) {\n    if (index === this.activeIndex) {\n      this.sprintBacklogs[index].isOpen = false;\n      this.activeIndex = -1;\n    } else {\n      this.sprintBacklogs.forEach(function (item, i) {\n        item.isOpen = i === index ? true : false;\n      });\n      this.activeIndex = index;\n    }\n  };\n  MapComponent.prototype.openAjoutDialog = function (ht, sprintBacklog) {\n    var _this = this;\n    var dialogRef = this.dialogAjout.open(AjoutTacheSpbComponent, {\n      width: '350px',\n      height: '550px',\n      data: {\n        sprintBacklog: sprintBacklog,\n        ticketHistoire: ht\n      }\n    });\n    dialogRef.afterClosed().subscribe(function (result) {\n      var e_6, _a;\n      if (result) {\n        var ticketHistoire_1 = result.ht;\n        try {\n          for (var _b = __values(_this.taskMap.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            if (key.id === ticketHistoire_1.id) {\n              var listeTache = _this.taskMap.get(key);\n              listeTache.push(result);\n              result.ht.sprintId = result.sprintBacklog.sprintId;\n              result.ht.status = \"EN_COURS\";\n              _this.webSocketService.messageHandlingAdd(result).subscribe(function (message) {}, function (err) {\n                console.error(err); // afficher les erreurs dans la console\n              }, function () {\n                console.log('WebSocket connection closed'); // afficher un message lorsque la connexion est fermée\n              });\n\n              console.log(result);\n              result.ht.sprintId = result.sprintBacklog.sprintId;\n              result.ht.status = \"EN_COURS\";\n              _this.ticketHistoireService.updateUserStory(result.ht.id, result.ht).subscribe(function (dataHistoire) {\n                console.log(dataHistoire);\n                // key.status = \"EN_COURS\"\n                // Récupérer la date la plus récente de la liste des tâches associées à un ticket d'histoire\n                _this.ticketTacheService.getListTicketTacheParHt(ticketHistoire_1.id).subscribe(function (tacheTickets) {\n                  var timestamps = tacheTickets.map(function (t) {\n                    return new Date(t.dateFin).getTime();\n                  });\n                  var maxTimestamp = Math.max.apply(Math, __spreadArray([], __read(timestamps), false));\n                  var datePlusRecente = new Date(maxTimestamp);\n                  // Mettre à jour la date de result.ht avec la date la plus récente\n                  result.ht.dateFin = datePlusRecente.toISOString(); // Convertir la date en format ISO\n                  // Mettre à jour l'histoire utilisateur avec la nouvelle date de fin\n                  _this.ticketHistoireService.updateUserStory(result.ht.id, result.ht).subscribe(function (dataHistoire) {\n                    console.log(dataHistoire);\n                    // key.status = \"EN_COURS\"\n                  });\n                });\n              });\n            }\n          }\n        } catch (e_6_1) {\n          e_6 = {\n            error: e_6_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_6) throw e_6.error;\n          }\n        }\n      }\n    });\n  };\n  MapComponent.prototype.openGestionTache = function (tt) {\n    var _this = this;\n    var dialogRef = this.dialogGestion.open(GestionTacheDialogComponent, {\n      width: '650px',\n      height: '300px',\n      data: {\n        ticketTache: tt\n      }\n    });\n    dialogRef.afterClosed().subscribe(function (result) {\n      var e_7, _a, e_8, _b;\n      console.log(result);\n      if (result.mode == 'modifier') {\n        _this.webSocketService.messageHandlingModifier(result.tt).subscribe(function (message) {\n          console.log(message.modifier); // afficher le message reçu dans la console\n        }, function (err) {\n          console.error(err); // afficher les erreurs dans la console\n        }, function () {\n          console.log('WebSocket connection closed'); // afficher un message lorsque la connexion est fermée\n        });\n      } else if (result.mode == 'supprimer') {\n        var ticketHistoire = result.tt.ht;\n        try {\n          for (var _c = __values(_this.taskMap.keys()), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var key = _d.value;\n            if (key.id === ticketHistoire.id) {\n              var listeTache = _this.taskMap.get(key);\n              _this.webSocketService.messageHandlingSupprimer(result.tt).subscribe(function (message) {\n                console.log(message.supprimer); // afficher le message reçu dans la console\n              }, function (err) {\n                console.error(err); // afficher les erreurs dans la console\n              }, function () {\n                console.log('WebSocket connection closed'); // afficher un message lorsque la connexion est fermée\n              });\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      } else if (result.mode == 'terminer') {\n        var ticketHistoire = result.tt.ht;\n        try {\n          for (var _e = __values(_this.taskMap.keys()), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var key = _f.value;\n            if (key.id === ticketHistoire.id) {\n              var listeTache = _this.taskMap.get(key);\n              var listeTacheTermine = listeTache.filter(function (tache) {\n                return tache.etat == \"terminé\";\n              });\n              if (listeTacheTermine.length == listeTache.length) {\n                ticketHistoire.status = \"TERMINE\";\n                console.log(ticketHistoire);\n                var listeTacheTermineDates = listeTacheTermine.map(function (tache) {\n                  return new Date(tache.dateFin).getTime();\n                });\n                var maxDateFin = new Date(Math.max.apply(Math, __spreadArray([], __read(listeTacheTermineDates), false)));\n                ticketHistoire.dateFin = maxDateFin;\n                _this.ticketHistoireService.updateUserStory(ticketHistoire.id, ticketHistoire).subscribe(function (dataHistoire) {\n                  console.log(dataHistoire);\n                  if (!_this.verifSprintBacklogTerminer()) Swal.fire('Félicitation ', 'vous avez terminer un histoire de sprint', 'success');else Swal.fire('Félicitation ', 'vous avez terminer le sprint ,\\n avez vous respecter le time Box', 'success');\n                });\n              }\n            }\n          }\n        } catch (e_8_1) {\n          e_8 = {\n            error: e_8_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_8) throw e_8.error;\n          }\n        }\n      }\n    });\n  };\n  MapComponent.prototype.checkRole = function (membre) {\n    var role = this.roles.find(function (role) {\n      return role.membre.id === membre.id;\n    });\n    return role.status == \"ACCEPTE\";\n  };\n  MapComponent.prototype.verifierPersPris = function (membre) {\n    var prendre = \"cette ticket est pris par \";\n    if (this.membreService.getMembreFromToken().id == membre.id) this.toastr.success(\"\".concat(prendre, \" Vous \\t\\uD83D\\uDE00\"));else this.toastr.success(\"\".concat(prendre, \" \").concat(membre.email));\n  };\n  MapComponent.prototype.verifSprintBacklogTerminer = function () {\n    var e_9, _a;\n    try {\n      for (var _b = __values(this.taskMap.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var key = _c.value;\n        if (key.status == \"EN_COURS\") return false;\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n    return true;\n  };\n  MapComponent.prototype.detacherMembreDeTache = function (tache) {\n    var _this = this;\n    if (tache.etat != \"terminé\") {\n      console.log(tache);\n      Swal.fire({\n        title: \"vous êtes sûr de vous détacher de cette tâche ?\",\n        icon: 'info',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Oui !',\n        cancelButtonText: 'Annuler',\n        backdrop: 'rgba(0,0,0,0.4)',\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        allowEnterKey: false,\n        focusConfirm: false\n      }).then(function (result) {\n        if (result.isConfirmed) {\n          tache.dateFin = null;\n          tache.dateLancement = null;\n          tache.membreId = null;\n          tache.membre = null;\n          _this.ticketTacheService.modifierTicketTache(tache).subscribe(function (data) {\n            tache = data;\n            _this.webSocketService.messageHandlingModifier(data).subscribe(function (message) {\n              console.log(message.modifier); // afficher le message reçu dans la console\n            }, function (err) {\n              console.error(err); // afficher les erreurs dans la console\n            }, function () {\n              console.log('WebSocket connection closed'); // afficher un message lorsque la connexion est fermée\n            });\n          });\n        }\n      });\n    } else {\n      Swal.fire('attentient', 'cette tâche est terminé', 'warning');\n    }\n  };\n  MapComponent.ɵfac = function MapComponent_Factory(t) {\n    return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.SprintService), i0.ɵɵdirectiveInject(i2.HistoireTicketService), i0.ɵɵdirectiveInject(i3.TicketTacheService), i0.ɵɵdirectiveInject(i4.SprintBacklogService), i0.ɵɵdirectiveInject(i5.MembreService), i0.ɵɵdirectiveInject(i6.MatDialog), i0.ɵɵdirectiveInject(i7.RoleService), i0.ɵɵdirectiveInject(i8.ToastrService), i0.ɵɵdirectiveInject(i6.MatDialog), i0.ɵɵdirectiveInject(i9.WebSocketTicketTacheService));\n  };\n  MapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapComponent,\n    selectors: [[\"app-map\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"content\", 2, \"margin-top\", \"4%\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"titre-zero\"], [\"width\", \"100%\", \"height\", \"50%\", \"src\", \"./../../../assets/img/loading.gif\", 2, \"margin-top\", \"-9%\"], [1, \"accordion\", 2, \"margin-bottom\", \"4%\"], [1, \"accordion-item\"], [1, \"accordion-header\", 3, \"id\", \"click\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"aria-expanded\", \"true\", 1, \"accordion-button\", \"bg-danger\", 3, \"disabled\", \"click\"], [1, \"accordion-collapse\", \"bg-dark\", \"collapse\", 3, \"aria-labelledby\", \"data-bs-parent\"], [1, \"accordion-body\", 2, \"margin-top\", \"0px\", \"margin-left\", \"0px\", 3, \"ngClass\", \"hidden\"], [1, \"row\"], [1, \"col-lg-4\", \"col-md-4\", \"col-sm-4\", \"hashed-border\"], [1, \"title\", \"text-light\", \"text-center\"], [1, \"col-lg-6\", \"col-md-6\", \"col-sm-6\", \"hashed-border\"], [1, \"col-lg-2\", \"col-md-2\", \"col-sm-2\", \"hashed-border\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 2, \"margin-top\", \"-1%\", 3, \"click\"], [3, \"sprintId\", 4, \"ngIf\"], [1, \"example-card\", 2, \"margin-bottom\", \"4%\"], [1, \"title\"], [1, \"badge\", \"rounded-pill\", 3, \"ngClass\"], [1, \"text-warning\"], [2, \"border\", \"2px solid rgba(10,220,15,0.6)\", \"margin-top\", \"2%\", \"padding\", \"5px\"], [1, \"d-flex\", \"justify-content-evenly\"], [1, \"text-danger\", 2, \"margin-bottom\", \"1%\"], [1, \"container\"], [\"class\", \"col-lg-6 col-md-6 col-sm-6\", 4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", 1, \"btn\", \"col-lg-5\", \"bg-light\", \"col-md-5\", \"light\", \"col-sm-5\", 2, \"margin-top\", \"6%\", \"border-top-right-radius\", \"30%\", \"cursor\", \"pointer\", 3, \"click\"], [2, \"font-size\", \"600%\", \"width\", \"auto\", \"height\", \"auto\", \"margin-left\", \"30%\", \"border-top-right-radius\", \"100px\"], [1, \"d-flex\", \"bd-highlight\", \"mb-1\"], [1, \"p-2\", \"bd-highlight\"], [1, \"ms-auto\", \"p-2\", \"bd-highlight\"], [1, \"container\", \"justify-content-center\"], [\"class\", \"row my-btn\", \"matTooltip\", \"cliquer ici\", \"style\", \"margin-bottom: 4%;\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-lg-6\", \"col-md-6\", \"col-sm-6\"], [1, \"example-card\", 2, \"margin-top\", \"6%\", 3, \"ngStyle\"], [1, \"pull-right\"], [\"class\", \"text-success\", 4, \"ngIf\"], [1, \"d-flex\", \"justify-content-around\"], [1, \"d-flex\", \"justify-content-between\"], [\"mat-icon-button\", \"\", \"style\", \"border:1px solidblack;\", \"aria-label\", \"Example icon-button with a menu\", 3, \"matMenuTriggerFor\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"detacher t\\u00E2che\", \"style\", \"border:1px solidblack;\", \"aria-label\", \"Example icon-button with a menu\", 3, \"matMenuTriggerFor\", \"click\", 4, \"ngIf\"], [1, \"text-success\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with a menu\", 2, \"border\", \"1px solidblack\", 3, \"matMenuTriggerFor\", \"click\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"detacher t\\u00E2che\", \"aria-label\", \"Example icon-button with a menu\", 2, \"border\", \"1px solidblack\", 3, \"matMenuTriggerFor\", \"click\"], [\"matTooltip\", \"cliquer ici\", 1, \"row\", \"my-btn\", 2, \"margin-bottom\", \"4%\", 3, \"click\"], [1, \"badge\", \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"w-75\", \"p-3\", \"bg-secondary\", \"rounded-pill\", 2, \"margin-left\", \"1%\", \"font-size\", \"100%\"], [1, \"title\", \"text-dark\"], [3, \"sprintId\"]],\n    template: function MapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, MapComponent_ng_container_1_Template, 4, 0, \"ng-container\", 1);\n        i0.ɵɵtemplate(2, MapComponent_ng_container_2_Template, 26, 18, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sprintBacklogs.length == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sprintBacklogs);\n      }\n    },\n    dependencies: [i10.NgClass, i10.NgForOf, i10.NgIf, i10.NgStyle, i11.MatMenuTrigger, i12.MatIcon, i13.MatButton, i13.MatIconButton, i14.MatCard, i14.MatCardContent, i14.MatCardFooter, i14.MatCardHeader, i14.MatCardSubtitle, i14.MatCardTitle, i15.MatTooltip, i16.HistoireMembreChartComponent, i10.DatePipe, i10.KeyValuePipe],\n    styles: [\"h2[_ngcontent-%COMP%] {\\n  color: #555;\\n  font-size: 36px;\\n  font-weight: 700;\\n}\\n\\n.hashed-border[_ngcontent-%COMP%] {\\n  border: 1px dotted grey;\\n}\\n\\n.light[_ngcontent-%COMP%] {\\n  box-shadow: 5px 5px 10px 2px rgba(255, 255, 255, 0.8);\\n}\\n\\n.my-btn[_ngcontent-%COMP%]:hover {\\n  cursor: pointer;\\n  opacity: 0.6;\\n  transition: all 0.5s;\\n}\\n\\n.titre-zero[_ngcontent-%COMP%] {\\n  z-index: 9999;\\n  font-family: fantasy;\\n  position: relative;\\n  top: -20px;\\n  margin-left: 37%;\\n  color: white;\\n}\"]\n  });\n  return MapComponent;\n}();\nexport { MapComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}