{"ast":null,"code":"import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TicketTacheService } from 'src/app/service/ticket-tache.service';\nimport { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/service/ticket-tache.service\";\nimport * as i3 from \"@angular/common\";\nvar StatCourbComponent = /** @class */function () {\n  function StatCourbComponent(dialogRef, data, ticketTacheService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.ticketTacheService = ticketTacheService;\n  }\n  StatCourbComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.ticketTacheService.getTicketsTacheByMembreId(this.data.membre.id).subscribe(function (data) {\n      data = data.filter(function (tt) {\n        return tt.ht.id == _this.data.histoire.id;\n      });\n      _this.ticketsTache = data;\n      //tableau des titre\n      var ticketTitres = _this.ticketsTache.map(function (ticket) {\n        return ticket.titre;\n      });\n      //tableau des Heurs\n      var ticketHeurs = _this.ticketsTache.map(function (ticket) {\n        return ticket.nbHeurs;\n      });\n      //couleur pour chaque ticket\n      var barColors = _this.ticketsTache.map(function (ticket) {\n        var r = Math.floor(Math.random() * 255);\n        var g = Math.floor(Math.random() * 255);\n        var b = Math.floor(Math.random() * 255);\n        return \"rgba(\".concat(r, \",\").concat(g, \",\").concat(b, \",0.2)\");\n      });\n      //Configuration de chart bar\n      var barChartConfig = {\n        type: 'bar',\n        data: {\n          labels: ticketTitres,\n          datasets: [{\n            label: 'mes tâche pour cette ticket histoire',\n            data: ticketHeurs,\n            backgroundColor: barColors\n          }]\n        },\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: 1 // Vous pouvez changer le stepSize selon vos préférences\n              }\n            }]\n          },\n\n          animation: {\n            duration: 1000,\n            easing: 'linear' // Type d'animation\n          },\n\n          events: [],\n          responsiveAnimationDuration: 0 // Désactiver l'animation responsive\n        }\n      };\n      // Création du graphique à barres\n      _this.barChart = new Chart(document.getElementById(\"avencement\"), barChartConfig);\n      _this.initialiserChartZero();\n      _this.ticketsTache.forEach(function (tache, index) {\n        var progressBar = setInterval(function () {\n          if (_this.barChart.data.datasets[0].data[index] >= tache.nbHeurs) {\n            clearInterval(progressBar);\n          } else {\n            //pour incrementer la nombre heurs de 1 data[index]\n            _this.barChart.data.datasets[0].data[index]++;\n            _this.barChart.update();\n          }\n        }, 1000 * 3600 / tache.nbHeurs);\n      });\n    });\n  };\n  StatCourbComponent.prototype.initialiserChartZero = function () {\n    var _this = this;\n    this.barChart.data.datasets.forEach(function (dataset) {\n      dataset.data = _this.ticketsTache.map(function (tache) {\n        return 0;\n      });\n    });\n  };\n  StatCourbComponent.ɵfac = function StatCourbComponent_Factory(t) {\n    return new (t || StatCourbComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.TicketTacheService));\n  };\n  StatCourbComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatCourbComponent,\n    selectors: [[\"app-stat-courb\"]],\n    decls: 18,\n    vars: 7,\n    consts: [[\"data-mdb-animation-show-on-load\", \"true\", 1, \"m-3\", \"animate__animated\", \"animate__slideInUp\", \"h-25\", \"w-100\"], [1, \"card\", \"w-75\"], [1, \"row\"], [\"src\", \"../../../../assets/img/emilyz.jpg\", \"alt\", \"Trendy Pants and Shoes\", 1, \"col-lg-4\", \"col-md-4\", \"img-fluid\", \"rounded-start\", \"h-100\"], [1, \"col-lg-8\", \"col-md-8\"], [1, \"card-title\", \"card-excerpt\"], [1, \"card-excerpt\"], [2, \"border\", \"none\", \"color\", \"deepskyblue\", \"text-decoration\", \"underline\", 3, \"href\"], [1, \"chart-area\"], [\"width\", \"\", \"height\", \"\", \"id\", \"avencement\"]],\n    template: function StatCourbComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"h4\", 5);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p\", 6);\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\", 6);\n        i0.ɵɵtext(12, \" contacter moi : \");\n        i0.ɵɵelementStart(13, \"a\", 7);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"div\", 8);\n        i0.ɵɵelement(17, \"canvas\", 9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\"Je m'appel \", ctx.data.membre.nom, \" \\uD83E\\uDD1D\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" Je suis inscrit dans cette application le \", i0.ɵɵpipeBind2(10, 4, ctx.data.membre.dateInscription, \"dd-MMMM-yyyy\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"href\", \"mailto:\" + ctx.data.membre.email, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.data.membre.email);\n      }\n    },\n    dependencies: [i3.DatePipe],\n    styles: [\".card[_ngcontent-%COMP%] {\\n  width: 400px; \\n  margin: 0px auto; \\n  background-color: white; \\n  box-shadow: 0px 5px 20px #999; \\n}\\n\\n.card[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] { \\n  color: #333;\\n  text-decoration: none;\\n}\\n\\n.card[_ngcontent-%COMP%]:hover   .card-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] { \\n  width: 160%;\\n  filter: grayscale(0);\\n}\\n\\n.card-date[_ngcontent-%COMP%] {\\n  font-family: \\\"Source Sans Pro\\\", sans-serif;\\n}\\n\\n.card-title[_ngcontent-%COMP%], .card-excerpt[_ngcontent-%COMP%] {\\n  color: #777;\\n  font-family: \\\"Playfair Display\\\", serif;\\n}\\n\\nh2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%] {\\n  color: #333;\\n}\\n\\np[_ngcontent-%COMP%] {\\n  color: darkgray;\\n  font-size: 15px;\\n}\"]\n  });\n  return StatCourbComponent;\n}();\nexport { StatCourbComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}