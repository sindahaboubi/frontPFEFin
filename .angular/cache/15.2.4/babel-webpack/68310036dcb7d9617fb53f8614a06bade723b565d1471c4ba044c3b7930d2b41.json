{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nvar CsrfInterceptor = /** @class */function () {\n  function CsrfInterceptor() {}\n  CsrfInterceptor.prototype.getCookie = function (name) {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.startsWith(name + '=')) {\n        return cookie.substring(name.length + 1);\n      }\n    }\n    return '';\n  };\n  CsrfInterceptor.prototype.intercept = function (request, next) {\n    var uri = request.url;\n    if (uri.includes('http://localhost:9999/authentification-service/auth') && request.method === 'GET' || uri.includes('http://localhost:9999/inscription-service')) return next.handle(request);\n    var csrfToken = this.getCookie(\"X-CSRF\");\n    console.log(csrfToken);\n    if (csrfToken) {\n      var modifiedRequest = request.clone({\n        headers: request.headers.set('X-CSRF-Token', csrfToken)\n      });\n      return next.handle(modifiedRequest);\n    }\n  };\n  CsrfInterceptor.ɵfac = function CsrfInterceptor_Factory(t) {\n    return new (t || CsrfInterceptor)();\n  };\n  CsrfInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CsrfInterceptor,\n    factory: CsrfInterceptor.ɵfac\n  });\n  return CsrfInterceptor;\n}();\nexport { CsrfInterceptor };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}