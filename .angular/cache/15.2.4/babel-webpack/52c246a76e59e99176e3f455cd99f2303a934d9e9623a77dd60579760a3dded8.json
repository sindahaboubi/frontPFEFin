{"ast":null,"code":"import { __assign, __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { ChefProjetServiceService } from 'src/app/service/chef-projet-service.service';\nimport { MembreService } from 'src/app/service/membre.service';\nimport Swal from 'sweetalert2';\nvar InscriptionComponent = /** @class */function () {\n  function InscriptionComponent(formBuilder, router, membreService, chefProjetService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.membreService = membreService;\n    this.chefProjetService = chefProjetService;\n    this.trigger = new Subject();\n    this.nextWebcam = new Subject();\n    this.sysImage = '';\n    this.type = new FormControl('', [Validators.required]);\n  }\n  InscriptionComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    if (localStorage.getItem(\"membre\")) this.membre = JSON.parse(localStorage.getItem(\"membre\"));\n    this.personneFormGroup = this.formBuilder.group({\n      nom: [\"\", Validators.required],\n      prenom: [\"\", Validators.required],\n      username: [\"\", Validators.required],\n      email: [\"\", [Validators.required, Validators.email]],\n      adresse: [\"\", Validators.required],\n      telephone: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(8)]],\n      pwd: [\"\", Validators.required],\n      dateInscription: new Date()\n    });\n    this.chefProjetFormGroup = this.formBuilder.group({\n      competanceAnalyseDonnees: [false],\n      competanceDeGestion: [false],\n      photo: [null, Validators.required]\n    });\n    this.membreFormGroup = this.formBuilder.group({\n      status: \"INACTIF\"\n    });\n    this.type.valueChanges.subscribe(function (type) {\n      if (type == 'membre' && localStorage.getItem('membre')) {\n        var membre = JSON.parse(localStorage.getItem('membre'));\n        _this.personneFormGroup.patchValue({\n          email: membre.email\n        });\n      }\n    });\n  };\n  InscriptionComponent.prototype.getSnapshot = function () {\n    this.trigger.next(void 0);\n  };\n  InscriptionComponent.prototype.captureImg = function (webcamImage) {\n    this.webcamImage = webcamImage;\n    this.sysImage = webcamImage.imageAsDataUrl;\n    // Convert sysImage to bytes\n    var base64 = this.sysImage.split(',')[1];\n    var byteCharacters = atob(base64);\n    var byteArray = new Uint8Array(byteCharacters.length);\n    for (var i = 0; i < byteCharacters.length; i++) {\n      byteArray[i] = byteCharacters.charCodeAt(i);\n    }\n    // Assign byteArray to photo field in chefProjetFormGroup\n    this.chefProjetFormGroup.patchValue({\n      photo: byteArray\n    });\n  };\n  Object.defineProperty(InscriptionComponent.prototype, \"invokeObservable\", {\n    get: function () {\n      return this.trigger.asObservable();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(InscriptionComponent.prototype, \"nextWebcamObservable\", {\n    get: function () {\n      return this.nextWebcam.asObservable();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  InscriptionComponent.prototype.inscriptionMembre = function () {\n    var membre = __assign(__assign({}, this.personneFormGroup.value), this.membreFormGroup.value);\n    if (localStorage.getItem('membre')) {\n      var id = JSON.parse(localStorage.getItem('membre')).id;\n      membre.id = id;\n      this.enregistrerMembre(membre);\n    } else {\n      this.enregistrerMembre(membre);\n    }\n  };\n  InscriptionComponent.prototype.enregistrerMembre = function (membre) {\n    var _this = this;\n    this.membreService.inscription(membre).subscribe(function (data) {\n      Swal.fire('Merci !', 'l\\'inscription est realiser avec succes', 'success').then(function (result) {\n        _this.router.navigateByUrl('/auth');\n      });\n    }, function (error) {\n      Swal.fire('Attention !', 'Vous avez déjà un compte', 'error');\n    });\n  };\n  InscriptionComponent.prototype.inscriptionChefProjet = function () {\n    var _this = this;\n    var chefProjet = __assign(__assign({}, this.chefProjetFormGroup.value), this.personneFormGroup.value);\n    var byteArray = new Array(chefProjet.photo.length);\n    for (var i = 0; i < chefProjet.photo.length; i++) {\n      byteArray[i] = chefProjet.photo[i];\n    }\n    chefProjet.photo = byteArray;\n    console.log(chefProjet);\n    this.chefProjetService.inscription(chefProjet).subscribe(function (data) {\n      if (!data) Swal.fire('Attention !', 'erreur d\\'inscription', 'error');\n      console.log(data);\n      Swal.fire('Merci !', 'l\\'inscription est realiser avec succes', 'success').then(function (result) {\n        _this.router.navigateByUrl('/auth');\n      });\n    });\n  };\n  InscriptionComponent = __decorate([Component({\n    selector: 'app-inscription',\n    templateUrl: './inscription.component.html',\n    styleUrls: ['./inscription.component.scss']\n  }), __metadata(\"design:paramtypes\", [FormBuilder, Router, MembreService, ChefProjetServiceService])], InscriptionComponent);\n  return InscriptionComponent;\n}();\nexport { InscriptionComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}