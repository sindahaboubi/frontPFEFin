{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TicketTacheService } from 'src/app/service/ticket-tache.service';\nimport Swal from 'sweetalert2';\nimport { MembreService } from 'src/app/service/membre.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/membre.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"src/app/service/ticket-tache.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/core\";\nimport * as i7 from \"@angular/material/tooltip\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"@angular/material/button\";\nfunction GestionTacheDialogComponent_form_22_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Ce champ est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GestionTacheDialogComponent_form_22_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Ce champ est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GestionTacheDialogComponent_form_22_mat_form_field_14_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Ce champ est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GestionTacheDialogComponent_form_22_mat_form_field_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 15)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Nombre d'heures\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 23);\n    i0.ɵɵtemplate(4, GestionTacheDialogComponent_form_22_mat_form_field_14_mat_error_4_Template, 2, 0, \"mat-error\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.modifTicketForm.get(\"nbHeurs\").hasError(\"required\"));\n  }\n}\nfunction GestionTacheDialogComponent_form_22_mat_form_field_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 24);\n    i0.ɵɵelement(1, \"mat-label\");\n    i0.ɵɵelementStart(2, \"mat-select\", 25)(3, \"mat-option\", 26);\n    i0.ɵɵtext(4, \"terminer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-option\", 27);\n    i0.ɵɵtext(6, \" a verifier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-option\", 28);\n    i0.ɵɵtext(8, \"en cours\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-option\", 29);\n    i0.ɵɵtext(10, \"a faire\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"selected\", ctx_r4.data.ticketTache.etat == \"termin\\u00E9\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"selected\", ctx_r4.data.ticketTache.etat == \"\\u00E0 v\\u00E9rifier\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"selected\", ctx_r4.data.ticketTache.etat == \"en cours\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"selected\", ctx_r4.data.ticketTache.etat == \"\\u00E0 faire\");\n  }\n}\nfunction GestionTacheDialogComponent_form_22_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 12);\n    i0.ɵɵlistener(\"ngSubmit\", function GestionTacheDialogComponent_form_22_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.modifierTache());\n    });\n    i0.ɵɵelementStart(1, \"div\", 13)(2, \"div\", 14)(3, \"mat-form-field\", 15)(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Titre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"textarea\", 16);\n    i0.ɵɵtemplate(7, GestionTacheDialogComponent_form_22_mat_error_7_Template, 2, 0, \"mat-error\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-form-field\", 15)(9, \"mat-label\");\n    i0.ɵɵtext(10, \"description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"textarea\", 18);\n    i0.ɵɵtemplate(12, GestionTacheDialogComponent_form_22_mat_error_12_Template, 2, 0, \"mat-error\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 14);\n    i0.ɵɵtemplate(14, GestionTacheDialogComponent_form_22_mat_form_field_14_Template, 5, 1, \"mat-form-field\", 19);\n    i0.ɵɵtemplate(15, GestionTacheDialogComponent_form_22_mat_form_field_15_Template, 11, 4, \"mat-form-field\", 20);\n    i0.ɵɵelementStart(16, \"div\", 21)(17, \"button\", 22);\n    i0.ɵɵtext(18, \"valider\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.modifTicketForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.modifTicketForm.get(\"titre\").hasError(\"required\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.modifTicketForm.get(\"description\").hasError(\"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.data.ticketTache.etat != \"terminer\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.data.ticketTache == null ? null : ctx_r0.data.ticketTache.membreId) != null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.modifTicketForm.invalid);\n  }\n}\nvar GestionTacheDialogComponent = /** @class */function () {\n  function GestionTacheDialogComponent(membreService, dialogRef, ticketTacheService, fb, data) {\n    this.membreService = membreService;\n    this.dialogRef = dialogRef;\n    this.ticketTacheService = ticketTacheService;\n    this.fb = fb;\n    this.data = data;\n    this.openForm = false;\n  }\n  GestionTacheDialogComponent.prototype.ngOnInit = function () {\n    this.membre = this.membreService.getMembreFromToken();\n    console.log(this.data.ticketTache);\n    this.modifTicketForm = this.fb.group({\n      id: this.data.ticketTache.id,\n      nbHeurs: [this.data.ticketTache.nbHeurs, Validators.required],\n      titre: [this.data.ticketTache.titre, Validators.required],\n      sprintBacklogId: this.data.ticketTache.sprintBacklogId,\n      ticketHistoireId: this.data.ticketTache.ticketHistoireId,\n      etat: this.data.ticketTache.etat,\n      description: [this.data.ticketTache.description, Validators.required],\n      membreId: this.data.ticketTache.membreId,\n      dateLancement: this.data.ticketTache.dateLancement,\n      dateFin: this.data.ticketTache.dateFin,\n      ht: this.data.ticketTache.ht\n    });\n  };\n  GestionTacheDialogComponent.prototype.terminerTache = function () {\n    var _this = this;\n    console.log(this.data.ticketTache);\n    if (this.membre.id == this.data.ticketTache.membreId) {\n      this.data.ticketTache.etat = \"terminé\";\n      this.data.ticketTache.dateFin = new Date();\n      this.ticketTacheService.modifierTicketTache(this.data.ticketTache).subscribe(function (data) {\n        console.log(\"voici ticket retourner :\", data);\n        data.ht.sprintId = data.sprintBacklog.sprintId;\n        Swal.fire('bon travail :)', 'tâche terminer', 'success');\n        var terminerData = {\n          mode: 'terminer',\n          tt: data\n        };\n        _this.dialogRef.close(terminerData);\n      }, function (error) {\n        console.log(error.status);\n        if (error.status == 401) Swal.fire('Attention', 'Vous n\\'avez pas une autorisation', 'error');\n      });\n    } else {\n      Swal.fire('Impossible de terminer cette tâche', 'Il n\\'existe pas un membre pour cette ticket tâche où elle ne t\\'appartient pas', 'error');\n    }\n  };\n  GestionTacheDialogComponent.prototype.modifierTache = function () {\n    var _this = this;\n    if (this.membre.id == this.data.ticketTache.membreId) Swal.fire({\n      title: \"vous êtes sûr d'efectuer des modification sur cette tâche &#128512;\",\n      icon: 'info',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Oui, Lancer!',\n      cancelButtonText: 'Annuler',\n      backdrop: 'rgba(0,0,0,0.4)',\n      allowOutsideClick: false,\n      allowEscapeKey: false,\n      allowEnterKey: false,\n      focusConfirm: false\n    }).then(function (result) {\n      if (result.isConfirmed) {\n        // Le code à exécuter si l'utilisateur a cliqué sur \"Oui, supprimer!\"\n        _this.ticketTacheService.modifierTicketTache(_this.modifTicketForm.value).subscribe(function (data) {\n          Swal.fire('tâche modifié', 'Cette tâche a été modifié.', 'success');\n          var modifData = {\n            mode: 'modifier',\n            tt: _this.modifTicketForm.value\n          };\n          _this.dialogRef.close(modifData);\n        }, function (error) {\n          Swal.fire('tâche non modifié', 'vous n\\'avez rien changer où il ya une \\nautre tâche equivalente a cette derniére', 'warning');\n          if (error.status == 401) Swal.fire('Attention', 'Vous n\\'avez pas une autorisation', 'error');\n        });\n      }\n    });\n  };\n  GestionTacheDialogComponent.prototype.supprimerTache = function () {\n    var _this = this;\n    if (this.membre.id == this.data.ticketTache.membreId) Swal.fire({\n      title: \"vous êtes sûr de supprimer cette tâche : \" + this.data.ticketTache.titre,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Oui, Lancer!',\n      cancelButtonText: 'Annuler',\n      background: 'rgba(0,0,0,0.9)',\n      backdrop: 'rgba(0,0,0,0.4)',\n      allowOutsideClick: false,\n      allowEscapeKey: false,\n      allowEnterKey: false,\n      focusConfirm: false\n    }).then(function (result) {\n      if (result.isConfirmed) {\n        // Le code à exécuter si l'utilisateur a cliqué sur \"Oui, supprimer!\"\n        _this.ticketTacheService.supprimerTicketTache(_this.data.ticketTache.id).subscribe(function (data) {\n          Swal.fire('tâche supprimé', 'Cette tâche a été supprimé.', 'success');\n          var modifData = {\n            mode: 'supprimer',\n            tt: _this.data.ticketTache\n          };\n          _this.dialogRef.close(modifData);\n        });\n      }\n    });\n  };\n  GestionTacheDialogComponent.prototype.openFormFunction = function () {\n    this.openForm = !this.openForm;\n  };\n  GestionTacheDialogComponent.ɵfac = function GestionTacheDialogComponent_Factory(t) {\n    return new (t || GestionTacheDialogComponent)(i0.ɵɵdirectiveInject(i1.MembreService), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.TicketTacheService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  GestionTacheDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GestionTacheDialogComponent,\n    selectors: [[\"app-gestion-tache-dialog\"]],\n    decls: 23,\n    vars: 3,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-mini-fab\", \"\", \"color\", \"warn\", \"mat-dialog-close\", \"\", 1, \"pull-right\", \"d-flex\", 2, \"margin-left\", \"35%\", \"margin-top\", \"2%\"], [1, \"button-container\"], [\"mat-raised-button\", \"\", 3, \"click\"], [1, \"finish-btn\", \"text-success\", 3, \"click\"], [\"matTooltip\", \"si cette t\\u00E2che est prise vous ne pouvez la supprimer\"], [\"mat-raised-button\", \"\", 3, \"disabled\", \"click\"], [1, \"delete-btn\", \"text-danger\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\"], [1, \"edit-btn\", \"text-warning\", 3, \"click\"], [\"mat-dialog-content\", \"\", 2, \"overflow-y\", \"auto\"], [\"style\", \"margin-top:3%;\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [2, \"margin-top\", \"3%\", 3, \"formGroup\", \"ngSubmit\"], [1, \"container\"], [1, \"row\"], [1, \"d-flex\", \"col-lg-6\", \"col-md-6\", \"col-sm-6\"], [\"matInput\", \"\", \"formControlName\", \"titre\", \"placeholder\", \"Ex. It makes me feel...\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"placeholder\", \"Ex. It makes me feel...\"], [\"class\", \"d-flex col-lg-6 col-md-6 col-sm-6\", 4, \"ngIf\"], [\"appearance\", \"fill\", \"class\", \"d-flex col-lg-6 col-md-6 col-sm-6\", 4, \"ngIf\"], [1, \"d-flex\", \"justify-content-center\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 1, \"col-2\", 3, \"disabled\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"nbHeurs\"], [\"appearance\", \"fill\", 1, \"d-flex\", \"col-lg-6\", \"col-md-6\", \"col-sm-6\"], [\"formControlName\", \"etat\"], [\"value\", \"termin\\u00E9\", 3, \"selected\"], [\"value\", \"\\u00E0 v\\u00E9rifier\", 3, \"selected\"], [\"value\", \"en cours\", 3, \"selected\"], [\"value\", \"\\u00E0 faire\", 3, \"selected\"]],\n    template: function GestionTacheDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0)(1, \"mat-icon\");\n        i0.ɵɵtext(2, \"task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(3, \" Gerer votre T\\u00E2che \");\n        i0.ɵɵelementStart(4, \"button\", 1)(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"close\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function GestionTacheDialogComponent_Template_button_click_9_listener() {\n          return ctx.terminerTache();\n        });\n        i0.ɵɵelementStart(10, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function GestionTacheDialogComponent_Template_button_click_10_listener() {\n          return ctx.terminerTache();\n        });\n        i0.ɵɵelementStart(11, \"div\");\n        i0.ɵɵtext(12, \"Terminer T\\u00E2che\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 5)(14, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function GestionTacheDialogComponent_Template_button_click_14_listener() {\n          return ctx.supprimerTache();\n        });\n        i0.ɵɵelementStart(15, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function GestionTacheDialogComponent_Template_button_click_15_listener() {\n          return ctx.supprimerTache();\n        });\n        i0.ɵɵtext(16, \"Supprimer T\\u00E2che\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"button\", 8)(18, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function GestionTacheDialogComponent_Template_button_click_18_listener() {\n          return ctx.openFormFunction();\n        });\n        i0.ɵɵelementStart(19, \"div\");\n        i0.ɵɵtext(20, \"Modifier T\\u00E2che\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(21, \"div\", 10);\n        i0.ɵɵtemplate(22, GestionTacheDialogComponent_form_22_Template, 19, 6, \"form\", 11);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"disabled\", ctx.data.ticketTache.membreId == null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.data.ticketTache.membreId == null);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.openForm);\n      }\n    },\n    dependencies: [i5.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i6.MatOption, i7.MatTooltip, i2.MatDialogClose, i2.MatDialogTitle, i2.MatDialogContent, i4.FormGroupDirective, i4.FormControlName, i8.MatInput, i9.MatFormField, i9.MatLabel, i9.MatError, i10.MatSelect, i11.MatIcon, i12.MatButton, i12.MatMiniFabButton],\n    styles: [\".button-container[_ngcontent-%COMP%] {\\n  display: flex; \\n  justify-content: center; \\n  align-items: center; \\n}\\n\\n\\n.delete-btn[_ngcontent-%COMP%], .edit-btn[_ngcontent-%COMP%], .finish-btn[_ngcontent-%COMP%] {\\n  background-color: white;\\n  margin-right: 1%;\\n  padding: 10px 20px;\\n  font-size: 16px;\\n  font-weight: bold;\\n  border-radius: 5px;\\n  margin: 0 10px; \\n}\\n\\n.delete-btn[_ngcontent-%COMP%] {\\n  color: red;\\n  border: 2px solid red;\\n}\\n\\n.edit-btn[_ngcontent-%COMP%] {\\n  color: orange;\\n  border: 2px solid orange;\\n}\\n\\n.finish-btn[_ngcontent-%COMP%] {\\n  color: green;\\n  border: 2px solid green;\\n}\"]\n  });\n  return GestionTacheDialogComponent;\n}();\nexport { GestionTacheDialogComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}