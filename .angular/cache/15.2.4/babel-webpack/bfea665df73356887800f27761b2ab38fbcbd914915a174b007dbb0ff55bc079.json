{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TicketTacheService } from 'src/app/service/ticket-tache.service';\nimport { CorbeilleService } from 'src/app/service/corbeille.service';\nimport Swal from 'sweetalert2';\nimport { MembreService } from 'src/app/service/membre.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/ticket-tache.service\";\nimport * as i2 from \"src/app/service/corbeille.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"src/app/service/membre.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/button\";\nfunction AjoutTacheSpbComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Ce champ est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjoutTacheSpbComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Ce champ est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjoutTacheSpbComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Ce champ est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nvar AjoutTacheSpbComponent = /** @class */function () {\n  function AjoutTacheSpbComponent(ticketTacheService, corbeilleService, dialogRef, data, fb, membreService) {\n    this.ticketTacheService = ticketTacheService;\n    this.corbeilleService = corbeilleService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.fb = fb;\n    this.membreService = membreService;\n  }\n  AjoutTacheSpbComponent.prototype.ngOnInit = function () {\n    var membre = this.membreService.getMembreFromToken();\n    this.ticketTacheForm = this.fb.group({\n      nbHeurs: [null, Validators.required],\n      titre: ['', Validators.required],\n      sprintBacklogId: this.data.sprintBacklog.id,\n      ticketHistoireId: this.data.ticketHistoire.id,\n      etat: \"à faire\",\n      dateLancement: new Date(),\n      dateFin: this.data.ticketHistoire.dateFin,\n      membreId: membre.id,\n      description: [null, Validators.required]\n    });\n  };\n  AjoutTacheSpbComponent.prototype.ajouterTicketTacheAuSpb = function () {\n    var _this = this;\n    var membre = this.membreService.getMembreFromToken();\n    var tacheAdd = this.ticketTacheForm.value;\n    var productBacklog = JSON.parse(localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem('productBacklogCourant'));\n    this.corbeilleService.getTacheCorbeilleByMembreId(membre.id).subscribe(function (dataCorbeille) {\n      dataCorbeille = dataCorbeille.filter(function (tache) {\n        return tache.ht.productBacklogId == productBacklog.id;\n      });\n      var findTache = dataCorbeille.find(function (tache) {\n        return tache.titre == tacheAdd.titre && tache.description == tacheAdd.description;\n      });\n      if (findTache) Swal.fire({\n        title: \"cette tâche existe déjà dans votre corbeille \\n elle va être ajouter ;\",\n        icon: 'info',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Oui, Lancer!',\n        cancelButtonText: 'Annuler',\n        backdrop: 'rgba(0,0,0,0.4)',\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        allowEnterKey: false,\n        focusConfirm: false\n      }).then(function (result) {\n        if (result.isConfirmed) {\n          _this.corbeilleService.deleteTacheFromCorbeille(findTache.id, \"local\").subscribe(function (data) {\n            _this.dialogRef.close(findTache);\n          });\n        } else {\n          Swal.fire('insertion annulé', 'Cette tâche existe dans votre corbeille.', 'error');\n        }\n      });else _this.ticketTacheService.ajouterTicketTache(tacheAdd).subscribe(function (data) {\n        _this.ticketTacheService.affecterTicketAMembre(membre, data.id).subscribe(function (dataApresAffectation) {\n          console.log(dataApresAffectation);\n          data.dateFin = dataApresAffectation.dateFin;\n          data.dateLancement = dataApresAffectation.dateLancement;\n          data.membre = dataApresAffectation.membre;\n          data.membreId = dataApresAffectation.membreId;\n          _this.dialogRef.close(data);\n        });\n      }, function (error) {\n        Swal.fire('insertion annulé', 'vous avez déjà cette ticket tâche.', 'error');\n      });\n    });\n  };\n  AjoutTacheSpbComponent.ɵfac = function AjoutTacheSpbComponent_Factory(t) {\n    return new (t || AjoutTacheSpbComponent)(i0.ɵɵdirectiveInject(i1.TicketTacheService), i0.ɵɵdirectiveInject(i2.CorbeilleService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.MembreService));\n  };\n  AjoutTacheSpbComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AjoutTacheSpbComponent,\n    selectors: [[\"app-ajout-tache-spb\"]],\n    decls: 26,\n    vars: 5,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [1, \"d-flex\"], [\"matInput\", \"\", \"formControlName\", \"titre\", \"placeholder\", \"Ex. It makes me feel...\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"placeholder\", \"Ex. It makes me feel...\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"nbHeurs\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"submit\", 2, \"margin-left\", \"3%\", 3, \"disabled\"]],\n    template: function AjoutTacheSpbComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AjoutTacheSpbComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.ajouterTicketTacheAuSpb();\n        });\n        i0.ɵɵelementStart(1, \"h1\", 1)(2, \"mat-icon\");\n        i0.ɵɵtext(3, \"task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(4, \" Ajouter Une Ticket Ici \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"mat-form-field\", 3)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Titre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"textarea\", 4);\n        i0.ɵɵtemplate(10, AjoutTacheSpbComponent_mat_error_10_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-form-field\", 3)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"textarea\", 6);\n        i0.ɵɵtemplate(15, AjoutTacheSpbComponent_mat_error_15_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Nombre d'heures\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 7);\n        i0.ɵɵtemplate(20, AjoutTacheSpbComponent_mat_error_20_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 8)(22, \"button\", 9);\n        i0.ɵɵtext(23, \"No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 10);\n        i0.ɵɵtext(25, \"Cr\\u00E9er\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.ticketTacheForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.ticketTacheForm.get(\"titre\").hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.ticketTacheForm.get(\"description\").hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.ticketTacheForm.get(\"nbHeurs\").hasError(\"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.ticketTacheForm.invalid);\n      }\n    },\n    dependencies: [i6.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i3.MatDialogClose, i3.MatDialogTitle, i3.MatDialogContent, i3.MatDialogActions, i4.FormGroupDirective, i4.FormControlName, i7.MatInput, i8.MatFormField, i8.MatLabel, i8.MatError, i9.MatIcon, i10.MatButton]\n  });\n  return AjoutTacheSpbComponent;\n}();\nexport { AjoutTacheSpbComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}