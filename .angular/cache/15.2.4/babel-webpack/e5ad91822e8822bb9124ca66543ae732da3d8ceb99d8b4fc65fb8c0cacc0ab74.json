{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar URL = \"http://localhost:9999/membre-service/membres\";\nvar URL2 = \"http://localhost:9999/inscription-service/auth\";\nvar URL3 = \"http://localhost:9999/inscription-service/inscription\";\nvar MembreService = /** @class */function () {\n  function MembreService(http) {\n    this.http = http;\n  }\n  MembreService.prototype.getHistoireTicketsByMembreId = function (membreId) {\n    return this.http.get(\"\".concat(URL, \"/\").concat(membreId, \"/histoiresTickets\"));\n  };\n  MembreService.prototype.afficherTousMembres = function () {\n    return this.http.get(\"\".concat(URL), {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var membres = response.body;\n      if (response.status === 404) return [];\n      return membres;\n    }));\n  };\n  MembreService.prototype.getMembreById = function (idMembre) {\n    return this.http.get(\"\".concat(URL, \"/\") + idMembre, {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var m = response.body;\n      if (response.status === 404) return null;\n      return m;\n    }));\n  };\n  MembreService.prototype.supprimerMembre = function (id) {\n    var _this = this;\n    return this.http.delete(\"\".concat(URL, \"/\") + id, {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var header = response.headers;\n      _this.csrfToken = header.get('X-Csrftoken');\n      sessionStorage.setItem(\"X-Csrftoken\", _this.csrfToken);\n      return response.body;\n    }));\n  };\n  MembreService.prototype.inscription = function (membre) {\n    var _this = this;\n    return this.http.post(\"\".concat(URL3, \"/membre\"), membre, {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var header = response.headers;\n      _this.csrfToken = header.get('X-Csrftoken');\n      sessionStorage.setItem(\"X-Csrftoken\", _this.csrfToken);\n      var membreInscris = response.body;\n      if (response.status == 400) return null;\n      return membreInscris;\n    }));\n  };\n  MembreService.prototype.modifierProfil = function (membre) {\n    var _this = this;\n    return this.http.put(\"\".concat(URL), membre, {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var header = response.headers;\n      _this.csrfToken = header.get('X-Csrftoken');\n      sessionStorage.setItem(\"X-Csrftoken\", _this.csrfToken);\n      return response.body;\n    }));\n  };\n  MembreService.prototype.decodeToken = function (token) {\n    var decodedToken = jwt_decode(token);\n    return decodedToken;\n  };\n  // getMembreFromToken(){\n  //   const token = localStorage.getItem('token');\n  //   const decodedToken = this.decodeToken(token);\n  //   const { id, email, nom, prenom, adresse, username, telephone, status, dateInscription } = decodedToken;\n  //   const membre: Membre = {\n  //     id,\n  //     email,\n  //     nom: nom,\n  //     prenom:prenom,\n  //     adresse:adresse,\n  //     username:username,\n  //     telephone:telephone,\n  //     status:status,\n  //     dateInscription:dateInscription\n  //   };\n  //   return decodedToken;\n  // }\n  MembreService.prototype.extractRolesFromToken = function (decodedToken) {\n    var roles = decodedToken.roles || [];\n    return roles;\n  };\n  MembreService.prototype.getMembreFromToken = function () {\n    var token = sessionStorage.getItem('token');\n    var decodedToken = this.decodeToken(token);\n    var roles = this.extractRolesFromToken(decodedToken);\n    if (!roles.includes('chefProjet')) {\n      var id = decodedToken.id,\n        email = decodedToken.email,\n        nom = decodedToken.nom,\n        prenom = decodedToken.prenom,\n        adresse = decodedToken.adresse,\n        username = decodedToken.username,\n        telephone = decodedToken.telephone,\n        status_1 = decodedToken.status,\n        dateInscription = decodedToken.dateInscription;\n      var membre = {\n        id: id,\n        email: email,\n        nom: nom,\n        prenom: prenom,\n        adresse: adresse,\n        username: username,\n        telephone: telephone,\n        status: status_1,\n        dateInscription: dateInscription\n      };\n      return membre;\n    }\n  };\n  MembreService.ɵfac = function MembreService_Factory(t) {\n    return new (t || MembreService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  MembreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MembreService,\n    factory: MembreService.ɵfac,\n    providedIn: 'root'\n  });\n  return MembreService;\n}();\nexport { MembreService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}