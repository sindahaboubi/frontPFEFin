{"ast":null,"code":"import { HttpClient, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport { WebSocketInvitationService } from './web-socket-invitation.service';\nimport jwt_decode from 'jwt-decode';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./web-socket-invitation.service\";\nvar URL = \"http://localhost:9999/invitation-service/roles\";\nvar RoleService = /** @class */function () {\n  function RoleService(http, webSocket) {\n    var _this = this;\n    this.http = http;\n    this.webSocket = webSocket;\n    this.webSocket.messageHandlingAddRole(null).subscribe(function (message) {\n      // if (localStorage.getItem(\"membre\")) {\n      //   // const membre = JSON.parse(localStorage.getItem(\"membre\"))\n      //   // console.log(message.subscribe );\n      //   // if (message.subscribe && membre.id == message.subscribe.pk.membreId)\n      //   //   this.roles.push(message.subscribe)\n      // }\n      if (message.subscribe && _this.getMembreFromToken().id == message.subscribe.pk.membreId) {\n        _this.roles.push(message.subscribe);\n      }\n    });\n  }\n  RoleService.prototype.ajouterRole = function (role) {\n    var _this = this;\n    return this.http.post(\"\".concat(URL), role, {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var createdRole = response.body;\n      console.log(response.status);\n      if (response.status === 404) {\n        return null;\n      }\n      _this.webSocket.messageHandlingAddRole(createdRole).subscribe(function (message) {\n        console.log(message.subscribe);\n      });\n      return createdRole;\n    }));\n  };\n  RoleService.prototype.afficherRole = function (pk) {\n    return this.http.post(\"\".concat(URL, \"/role\"), pk, {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var roleRecup = response.body;\n      if (response.status === 404) return null;\n      return roleRecup;\n    }));\n  };\n  RoleService.prototype.supprimerRole = function (id, idChef) {\n    console.log(idChef);\n    var params = new HttpParams().set('rolePk', JSON.stringify(id)).set('idchef', idChef.toString());\n    return this.http.delete(\"\".concat(URL), {\n      params: params\n    });\n  };\n  RoleService.prototype.afficherListRoleParProjet = function (idProjet) {\n    return this.http.get(\"\".concat(URL, \"/projets/\") + idProjet, {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var roleListe = response.body;\n      if (response.status === 404) return null;\n      if (response.status === 500) return null;\n      if (response.status === 401) {\n        Swal.fire('Attention', 'vous n\\'avez pas une autorisation', 'error');\n        return null;\n      }\n      return roleListe;\n    }));\n  };\n  RoleService.prototype.modifierRole = function (role) {\n    return this.http.put(\"\".concat(URL), role, {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var role = response.body;\n      if (response.status === 400) return null;\n      return role;\n    }));\n  };\n  RoleService.prototype.afficherListRoleParMembre = function (idMembre) {\n    var _this = this;\n    return this.http.get(\"\".concat(URL, \"/membres/\") + idMembre, {\n      observe: 'response'\n    }).pipe(map(function (response) {\n      var roleListe = response.body;\n      if (response.status === 404) return null;\n      if (response.status === 500) return null;\n      if (response.status === 401) {\n        Swal.fire('Attention', 'vous n\\'avez pas une autorisation', 'error');\n        return null;\n      }\n      _this.roles = roleListe;\n      return roleListe;\n    }));\n  };\n  RoleService.prototype.setRoles = function (roles) {\n    this.roles = roles;\n  };\n  RoleService.prototype.getRoles = function () {\n    return this.roles;\n  };\n  RoleService.prototype.decodeToken = function (token) {\n    var decodedToken = jwt_decode(token);\n    return decodedToken;\n  };\n  RoleService.prototype.getMembreFromToken = function () {\n    var token = localStorage.getItem('token');\n    var decodedToken = this.decodeToken(token);\n    var id = decodedToken.id,\n      email = decodedToken.email,\n      nom = decodedToken.nom,\n      prenom = decodedToken.prenom,\n      adresse = decodedToken.adresse,\n      username = decodedToken.username,\n      telephone = decodedToken.telephone,\n      status = decodedToken.status,\n      dateInscription = decodedToken.dateInscription;\n    var membre = {\n      id: id,\n      email: email,\n      nom: nom,\n      prenom: prenom,\n      adresse: adresse,\n      username: username,\n      telephone: telephone,\n      status: status,\n      dateInscription: dateInscription\n    };\n    return membre;\n  };\n  RoleService.ɵfac = function RoleService_Factory(t) {\n    return new (t || RoleService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.WebSocketInvitationService));\n  };\n  RoleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RoleService,\n    factory: RoleService.ɵfac,\n    providedIn: 'root'\n  });\n  return RoleService;\n}();\nexport { RoleService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}