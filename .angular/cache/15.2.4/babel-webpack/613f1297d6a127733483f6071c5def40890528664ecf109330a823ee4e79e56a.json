{"ast":null,"code":"import { __values } from \"tslib\";\nimport { ToastrService } from 'ngx-toastr';\nimport { ProductBacklogService } from 'src/app/service/product-backlog.service';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport { TicketTacheService } from 'src/app/service/ticket-tache.service';\nimport Sortable from 'sortablejs';\nimport Swal from 'sweetalert2';\nimport { MembreService } from 'src/app/service/membre.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"src/app/service/ticket-tache.service\";\nimport * as i3 from \"src/app/service/product-backlog.service\";\nimport * as i4 from \"src/app/service/sprint.service\";\nimport * as i5 from \"src/app/service/membre.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/menu\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/button\";\nfunction ScrumBoardComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var sprint_r6 = ctx.$implicit;\n    var i_r7 = ctx.index;\n    i0.ɵɵproperty(\"value\", sprint_r6.id)(\"selected\", sprint_r6.etat === \"en cours\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", \"Sprint \" + (i_r7 + 1), \" \", sprint_r6.etat, \" \");\n  }\n}\nfunction ScrumBoardComponent_span_16_span_1_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ScrumBoardComponent_span_16_span_1_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      var tache_r8 = i0.ɵɵnextContext(2).$implicit;\n      var ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.verifierPersPris(tache_r8.membre));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"how_to_reg\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", ctx_r10.menu);\n  }\n}\nfunction ScrumBoardComponent_span_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵelementContainerStart(1, 31);\n    i0.ɵɵelementStart(2, \"span\")(3, \"h2\", 32);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 33);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 34);\n    i0.ɵɵtemplate(8, ScrumBoardComponent_span_16_span_1_button_8_Template, 3, 1, \"button\", 35);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"type\", \"warning\")(\"dismissible\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"diabled\", tache_r8.etat == \"en retard\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(tache_r8.titre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", tache_r8.nbHeurs, \" heure(s)\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", tache_r8.membreId != null);\n  }\n}\nfunction ScrumBoardComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 28);\n    i0.ɵɵlistener(\"drop\", function ScrumBoardComponent_span_16_Template_span_drop_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r16);\n      var tache_r8 = restoredCtx.$implicit;\n      var ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onDrop($event, tache_r8));\n    });\n    i0.ɵɵtemplate(1, ScrumBoardComponent_span_16_span_1_Template, 9, 6, \"span\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"draggable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tache_r8.etat === \"en retard\");\n  }\n}\nfunction ScrumBoardComponent_span_22_span_1_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function ScrumBoardComponent_span_22_span_1_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r23);\n      var tache_r17 = i0.ɵɵnextContext(2).$implicit;\n      var ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.prendreTicket(tache_r17.id));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"person_add\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", ctx_r19.menu);\n  }\n}\nfunction ScrumBoardComponent_span_22_span_1_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ScrumBoardComponent_span_22_span_1_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      var tache_r17 = i0.ɵɵnextContext(2).$implicit;\n      var ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.verifierPersPris(tache_r17.membre));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"how_to_reg\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r20 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", ctx_r20.menu);\n  }\n}\nfunction ScrumBoardComponent_span_22_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵelementContainerStart(1, 31);\n    i0.ɵɵelementStart(2, \"span\")(3, \"h2\", 32);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 33);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 34);\n    i0.ɵɵtemplate(8, ScrumBoardComponent_span_22_span_1_button_8_Template, 3, 1, \"button\", 37);\n    i0.ɵɵtemplate(9, ScrumBoardComponent_span_22_span_1_button_9_Template, 3, 1, \"button\", 35);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"type\", \"warning\")(\"dismissible\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"diabled\", tache_r17.etat == \"\\u00E0 faire\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(tache_r17.titre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", tache_r17.nbHeurs, \" heure(s)\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", tache_r17.membreId == null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tache_r17.membreId != null);\n  }\n}\nfunction ScrumBoardComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 28);\n    i0.ɵɵlistener(\"drop\", function ScrumBoardComponent_span_22_Template_span_drop_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r29);\n      var tache_r17 = restoredCtx.$implicit;\n      var ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.onDrop($event, tache_r17));\n    });\n    i0.ɵɵtemplate(1, ScrumBoardComponent_span_22_span_1_Template, 10, 7, \"span\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"draggable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tache_r17.etat === \"\\u00E0 faire\");\n  }\n}\nfunction ScrumBoardComponent_span_28_span_1_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ScrumBoardComponent_span_28_span_1_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r35);\n      var tache_r30 = i0.ɵɵnextContext(2).$implicit;\n      var ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.verifierPersPris(tache_r30.membre));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"how_to_reg\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r32 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", ctx_r32.menu);\n  }\n}\nfunction ScrumBoardComponent_span_28_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵelementContainerStart(1, 31);\n    i0.ɵɵelementStart(2, \"span\")(3, \"h2\", 32);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 33);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 34);\n    i0.ɵɵtemplate(8, ScrumBoardComponent_span_28_span_1_button_8_Template, 3, 1, \"button\", 35);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r30 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"type\", \"warning\")(\"dismissible\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"diabled\", tache_r30.etat == \"\\u00E0 v\\u00E9rifier\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(tache_r30.titre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", tache_r30.nbHeurs, \" heure(s)\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", tache_r30.membreId != null);\n  }\n}\nfunction ScrumBoardComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 28);\n    i0.ɵɵlistener(\"drop\", function ScrumBoardComponent_span_28_Template_span_drop_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r38);\n      var tache_r30 = restoredCtx.$implicit;\n      var ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.onDrop($event, tache_r30));\n    });\n    i0.ɵɵtemplate(1, ScrumBoardComponent_span_28_span_1_Template, 9, 6, \"span\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r30 = ctx.$implicit;\n    i0.ɵɵproperty(\"draggable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tache_r30.etat === \"\\u00E0 v\\u00E9rifier\");\n  }\n}\nfunction ScrumBoardComponent_span_34_span_1_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r44 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ScrumBoardComponent_span_34_span_1_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r44);\n      var tache_r39 = i0.ɵɵnextContext(2).$implicit;\n      var ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.verifierPersPris(tache_r39.membre));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"how_to_reg\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r41 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", ctx_r41.menu);\n  }\n}\nfunction ScrumBoardComponent_span_34_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵelementContainerStart(1, 31);\n    i0.ɵɵelementStart(2, \"span\")(3, \"h2\", 32);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 33);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 34);\n    i0.ɵɵtemplate(8, ScrumBoardComponent_span_34_span_1_button_8_Template, 3, 1, \"button\", 35);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r39 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"type\", \"warning\")(\"dismissible\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"diabled\", tache_r39.etat == \"en cours\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(tache_r39.titre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", tache_r39.nbHeurs, \" heure(s)\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", tache_r39.membreId != null);\n  }\n}\nfunction ScrumBoardComponent_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r47 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 28);\n    i0.ɵɵlistener(\"drop\", function ScrumBoardComponent_span_34_Template_span_drop_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r47);\n      var tache_r39 = restoredCtx.$implicit;\n      var ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.onDrop($event, tache_r39));\n    });\n    i0.ɵɵtemplate(1, ScrumBoardComponent_span_34_span_1_Template, 9, 6, \"span\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r39 = ctx.$implicit;\n    i0.ɵɵproperty(\"draggable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tache_r39.etat === \"en cours\");\n  }\n}\nfunction ScrumBoardComponent_span_40_span_1_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r53 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ScrumBoardComponent_span_40_span_1_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r53);\n      var tache_r48 = i0.ɵɵnextContext(2).$implicit;\n      var ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.verifierPersPris(tache_r48.membre));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"how_to_reg\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r50 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", ctx_r50.menu);\n  }\n}\nfunction ScrumBoardComponent_span_40_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵelementContainerStart(1, 31);\n    i0.ɵɵelementStart(2, \"span\")(3, \"h2\", 32);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 33);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 34);\n    i0.ɵɵtemplate(8, ScrumBoardComponent_span_40_span_1_button_8_Template, 3, 1, \"button\", 35);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r48 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"type\", \"warning\")(\"dismissible\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"diabled\", tache_r48.etat == \"termin\\u00E9\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(tache_r48.titre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", tache_r48.nbHeurs, \" heure(s)\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", tache_r48.membreId != null);\n  }\n}\nfunction ScrumBoardComponent_span_40_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r56 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 39);\n    i0.ɵɵlistener(\"drop\", function ScrumBoardComponent_span_40_Template_span_drop_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r56);\n      var tache_r48 = restoredCtx.$implicit;\n      var ctx_r55 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r55.onDrop($event, tache_r48));\n    });\n    i0.ɵɵtemplate(1, ScrumBoardComponent_span_40_span_1_Template, 9, 6, \"span\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r48 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tache_r48.etat === \"termin\\u00E9\");\n  }\n}\nvar ScrumBoardComponent = /** @class */function () {\n  function ScrumBoardComponent(toastr, ticketTacheService, productBacklogService, sprintService, membreService) {\n    this.toastr = toastr;\n    this.ticketTacheService = ticketTacheService;\n    this.productBacklogService = productBacklogService;\n    this.sprintService = sprintService;\n    this.membreService = membreService;\n    this.staticAlertClosed = false;\n    this.staticAlertClosed1 = false;\n    this.staticAlertClosed2 = false;\n    this.staticAlertClosed3 = false;\n    this.staticAlertClosed4 = false;\n    this.staticAlertClosed5 = false;\n    this.staticAlertClosed6 = false;\n    this.staticAlertClosed7 = false;\n    this.ticketsTache = [];\n    this.movedElementId = '';\n  }\n  ScrumBoardComponent.prototype.showNotification = function (from, align) {\n    var color = Math.floor(Math.random() * 5 + 1);\n    switch (color) {\n      case 1:\n        this.toastr.info('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-info alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      case 2:\n        this.toastr.success('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-success alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      case 3:\n        this.toastr.warning('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-warning alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      case 4:\n        this.toastr.error('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          enableHtml: true,\n          closeButton: true,\n          toastClass: \"alert alert-danger alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      case 5:\n        this.toastr.show('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-primary alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  ScrumBoardComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.sprintService.getListSprintsByProductBacklog(this.productBacklogService.getProductBacklogByIdFromLocalStorage()).subscribe(function (data) {\n      _this.sprints = data;\n      // Recherche du sprint \"en cours\"\n      var sprintEnCours = _this.sprints.find(function (sprint) {\n        return sprint.etat === 'en cours';\n      });\n      // Si aucun sprint \"en cours\" n'est trouvé, sélectionner le premier sprint\n      if (sprintEnCours) {\n        _this.selectedSprintId = sprintEnCours.id;\n        _this.getTicketsTacheBySprint(_this.selectedSprintId);\n      } else if (_this.sprints.length > 0) {\n        _this.selectedSprintId = _this.sprints[0].id;\n        _this.getTicketsTacheBySprint(_this.selectedSprintId);\n      }\n    }, function (error) {\n      console.log(error.status);\n      if (error.status == 401) Swal.fire('Attention', 'Vous n\\'avez pas une autorisation', 'error');\n    });\n  };\n  ScrumBoardComponent.prototype.getTicketsTacheBySprint = function (sprintId) {\n    var _this = this;\n    if (sprintId) {\n      this.ticketTacheService.getTicketsTacheBySprint(sprintId).subscribe(function (tickets) {\n        _this.ticketsTache = tickets;\n        console.log(_this.ticketsTache);\n      });\n    } else {\n      this.ticketsTache = null;\n    }\n  };\n  ScrumBoardComponent.prototype.filterTicketsTache = function () {\n    var _this = this;\n    if (this.selectedSprintId) {\n      if (this.searchMember) {\n        // Filtrer les tickets tâche en fonction du membre saisi\n        this.ticketsTache = this.ticketsTache.filter(function (tache) {\n          // Comparer avec le membre du ticket tâche\n          return tache.membre && (tache.membre.nom.includes(_this.searchMember) || tache.membre.prenom.includes(_this.searchMember) || tache.membre.email.includes(_this.searchMember));\n        });\n      } else {\n        // Aucun membre saisi, afficher toutes les tâches\n        this.getTicketsTacheBySprint(this.selectedSprintId);\n      }\n    }\n  };\n  ScrumBoardComponent.prototype.ngAfterViewInit = function () {\n    var e_1, _a;\n    var cardBodies = document.querySelectorAll('.card-body');\n    var myArray = Array.from(cardBodies);\n    try {\n      for (var myArray_1 = __values(myArray), myArray_1_1 = myArray_1.next(); !myArray_1_1.done; myArray_1_1 = myArray_1.next()) {\n        var body = myArray_1_1.value;\n        var sortable = new Sortable(body, {\n          group: 'shared',\n          animation: 150,\n          onEnd: function (evt) {\n            console.log('Moved item', evt.item, 'from index', evt.oldIndex, 'to index', evt.newIndex);\n            console.log('Target element ID:', evt.to.id);\n          }\n        });\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (myArray_1_1 && !myArray_1_1.done && (_a = myArray_1.return)) _a.call(myArray_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  ScrumBoardComponent.prototype.onDrop = function (event, tache) {\n    var targetElement = event.target;\n    var containerElement = targetElement.closest('.card-body');\n    var containerId = containerElement.getAttribute('id');\n    console.log('Nouvel etat du ticket tâche: ', containerId);\n    if (tache.membreId != null) {\n      tache.etat = containerId;\n      this.ticketTacheService.modifierTicketTache(tache).subscribe(function (modifiedTicket) {\n        console.log('Ticket tâche déplacé:', modifiedTicket);\n      }, function (error) {\n        console.error('Erreur: ', error);\n      });\n    }\n  };\n  ScrumBoardComponent.prototype.onDragEnd = function (event, tache) {\n    console.log(tache);\n    if (tache.membreId == null) {\n      this.toastr.error(\"Cette ticket n'a pas de membre\");\n      window.location.reload();\n    }\n  };\n  ScrumBoardComponent.prototype.prendreTicket = function (idTicketTache) {\n    var _this = this;\n    var ticket = this.ticketsTache.find(function (tache) {\n      return tache.id === idTicketTache;\n    });\n    Swal.fire({\n      title: \"vous êtes sûr de prendre la tâche : \" + ticket.titre,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Oui, Lancer!',\n      cancelButtonText: 'Annuler',\n      background: 'rgba(0,0,0,0.9)',\n      backdrop: 'rgba(0,0,0,0.4)',\n      allowOutsideClick: false,\n      allowEscapeKey: false,\n      allowEnterKey: false,\n      focusConfirm: false\n    }).then(function (result) {\n      if (result.isConfirmed) {\n        var membre = _this.membreService.getMembreFromToken();\n        _this.ticketTacheService.affecterTicketAMembre(membre, idTicketTache).subscribe(function (dataTicket) {\n          _this.ticketsTache.forEach(function (ticket) {\n            if (ticket.id == idTicketTache) {\n              ticket.dateFin = dataTicket.dateFin;\n              ticket.dateLancement = dataTicket.dateLancement;\n              ticket.membre = dataTicket.membre;\n              ticket.membreId = dataTicket.membreId;\n              Swal.fire('tâche pris', 'Vous êtes le responsable de cette tâche vieulliez à ce quelle soit terminé dans ' + ticket.nbHeurs + \"H\", 'success');\n            }\n          });\n        }, function (error) {\n          console.log(error.status);\n          if (error.status == 401) Swal.fire('Attention', 'Vous n\\'avez pas une autorisation', 'error');\n        });\n      }\n    });\n  };\n  ScrumBoardComponent.prototype.verifierPersPris = function (membre) {\n    var prendre = \"Cette tâche est prise par \";\n    if (this.membreService.getMembreFromToken().id == membre.id) this.toastr.success(\"\".concat(prendre, \" vous \\uD83D\\uDE00\"));else this.toastr.success(\"\".concat(prendre, \" \").concat(membre.email));\n  };\n  ScrumBoardComponent.ɵfac = function ScrumBoardComponent_Factory(t) {\n    return new (t || ScrumBoardComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.TicketTacheService), i0.ɵɵdirectiveInject(i3.ProductBacklogService), i0.ɵɵdirectiveInject(i4.SprintService), i0.ɵɵdirectiveInject(i5.MembreService));\n  };\n  ScrumBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ScrumBoardComponent,\n    selectors: [[\"app-scrum-board\"]],\n    decls: 41,\n    vars: 9,\n    consts: [[1, \"content\"], [1, \"d-flex\", \"align-items-stretch\"], [1, \"form-select\", \"custom-select\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-group\", \"ms-3\"], [\"type\", \"text\", \"placeholder\", \"Recherche par mail\", 1, \"form-control\", 3, \"disabled\", \"ngModel\", \"ngModelChange\", \"input\"], [1, \"input-group-text\"], [1, \"fas\", \"fa-search\"], [1, \"column\", \"en-retard\"], [1, \"column-title\"], [1, \"fas\", \"fa-exclamation-circle\", \"icone\"], [\"id\", \"en retard\", 1, \"card-body\"], [3, \"draggable\", \"drop\", 4, \"ngFor\", \"ngForOf\"], [1, \"column\", \"a-faire\"], [1, \"fas\", \"fa-tasks\", \"icone\"], [\"id\", \"\\u00E0 faire\", 1, \"card-body\"], [1, \"column\", \"a-verifier\"], [1, \"fas\", \"fa-search\", \"icone\"], [\"id\", \"\\u00E0 v\\u00E9rifier\", 1, \"card-body\"], [1, \"column\", \"en-cours\"], [1, \"fas\", \"fa-spinner\", \"icone\"], [\"id\", \"en cours\", 1, \"card-body\"], [1, \"column\", \"termine\"], [1, \"fas\", \"fa-check\", \"icone\"], [\"id\", \"termin\\u00E9\", 1, \"card-body\"], [3, \"drop\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"], [3, \"draggable\", \"drop\"], [\"class\", \"card\", 3, \"type\", \"dismissible\", 4, \"ngIf\"], [1, \"card\", 3, \"type\", \"dismissible\"], [3, \"diabled\"], [1, \"card-title\"], [1, \"card-hours\"], [1, \"card-member\"], [\"mat-icon-button\", \"\", \"style\", \"border:1px solidblack;\", \"aria-label\", \"Example icon-button with a menu\", 3, \"matMenuTriggerFor\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with a menu\", 2, \"border\", \"1px solidblack\", 3, \"matMenuTriggerFor\", \"click\"], [\"class\", \"addMember\", \"mat-icon-button\", \"\", \"style\", \"border:1px solidblack;\", \"aria-label\", \"Example icon-button with a menu\", 3, \"matMenuTriggerFor\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with a menu\", 1, \"addMember\", 2, \"border\", \"1px solidblack\", 3, \"matMenuTriggerFor\", \"click\"], [3, \"drop\"]],\n    template: function ScrumBoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"select\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ScrumBoardComponent_Template_select_ngModelChange_2_listener($event) {\n          return ctx.selectedSprintId = $event;\n        })(\"change\", function ScrumBoardComponent_Template_select_change_2_listener($event) {\n          return ctx.getTicketsTacheBySprint($event.target.value);\n        });\n        i0.ɵɵelementStart(3, \"option\", 3);\n        i0.ɵɵtext(4, \"-- S\\u00E9lectionner un sprint --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, ScrumBoardComponent_option_5_Template, 2, 4, \"option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function ScrumBoardComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.searchMember = $event;\n        })(\"input\", function ScrumBoardComponent_Template_input_input_7_listener() {\n          return ctx.filterTicketsTache();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵelement(9, \"i\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10);\n        i0.ɵɵtext(13, \" En retard \");\n        i0.ɵɵelement(14, \"i\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵtemplate(16, ScrumBoardComponent_span_16_Template, 2, 2, \"span\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 14)(18, \"div\", 10);\n        i0.ɵɵtext(19, \" A faire \");\n        i0.ɵɵelement(20, \"i\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 16);\n        i0.ɵɵtemplate(22, ScrumBoardComponent_span_22_Template, 2, 2, \"span\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 17)(24, \"div\", 10);\n        i0.ɵɵtext(25, \" A v\\u00E9rifier \");\n        i0.ɵɵelement(26, \"i\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 19);\n        i0.ɵɵtemplate(28, ScrumBoardComponent_span_28_Template, 2, 2, \"span\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 20)(30, \"div\", 10);\n        i0.ɵɵtext(31, \" En cours \");\n        i0.ɵɵelement(32, \"i\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 22);\n        i0.ɵɵtemplate(34, ScrumBoardComponent_span_34_Template, 2, 2, \"span\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 23)(36, \"div\", 10);\n        i0.ɵɵtext(37, \" Termin\\u00E9 \");\n        i0.ɵɵelement(38, \"i\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 25);\n        i0.ɵɵtemplate(40, ScrumBoardComponent_span_40_Template, 2, 1, \"span\", 26);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedSprintId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sprints);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.selectedSprintId)(\"ngModel\", ctx.searchMember);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ticketsTache);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ticketsTache);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ticketsTache);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ticketsTache);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ticketsTache);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.DefaultValueAccessor, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgModel, i8.MatMenuTrigger, i9.MatIcon, i10.MatIconButton],\n    styles: [\"@charset \\\"UTF-8\\\";\\n.column-title[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  font-weight: bold;\\n  color: white;\\n  text-align: left;\\n  margin-bottom: 10px;\\n  padding: 5px;\\n  border-radius: 5px;\\n}\\n\\n.column-title[_ngcontent-%COMP%]   .icone[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n\\n.en-retard[_ngcontent-%COMP%] {\\n  background-image: linear-gradient(rgb(226, 0, 0), rgb(170, 0, 0));\\n}\\n\\n.a-faire[_ngcontent-%COMP%] {\\n  background-image: linear-gradient(rgb(107, 107, 107), rgb(50, 50, 50));\\n}\\n\\n.a-verifier[_ngcontent-%COMP%] {\\n  background-image: linear-gradient(rgb(255, 136, 0), rgb(255, 204, 0));\\n}\\n\\n.en-cours[_ngcontent-%COMP%] {\\n  background-image: linear-gradient(rgb(0, 110, 255), rgb(0, 70, 170));\\n}\\n\\n.termine[_ngcontent-%COMP%] {\\n  background-image: linear-gradient(to bottom, rgb(0, 105, 0), rgb(0, 70, 0));\\n}\\n\\n.card-title[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  font-weight: bold;\\n  margin-bottom: 5px;\\n  margin-top: 0;\\n  color: black;\\n}\\n\\n.card-hours[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  margin-bottom: 5px;\\n  margin-top: 0;\\n  font-style: italic;\\n  color: rgb(73, 72, 72);\\n}\\n\\n.card-member[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 5px;\\n  right: 5px;\\n  font-size: 18px;\\n  color: rgb(0, 0, 0);\\n}\\n\\n.column[_ngcontent-%COMP%] {\\n  float: left;\\n  width: 20%;\\n  padding: 10px;\\n  height: 100%;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  background-color: white;\\n  border-radius: 5px;\\n  padding: 7px;\\n  margin-bottom: 10px;\\n  position: relative;\\n  border-top: 5px solid rgb(49, 49, 49);\\n  height: 80px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center; \\n  justify-content: center; \\n  width: 100%;\\n}\\n\\n.card-body[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column; \\n  justify-content: center; \\n}\\n\\n.card[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\\n  width: 100%; \\n}\\n\\n.custom-select[_ngcontent-%COMP%] {\\n  background-color: rgba(211, 211, 211, 0.26);\\n  color: white;\\n}\"]\n  });\n  return ScrumBoardComponent;\n}();\nexport { ScrumBoardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}